# KEY BINDINGS
#download_video_binding=ctrl+d
#download_audio_binding=ctrl+a
#download_subtitle_binding=ctrl+s
#download_video_embed_subtitle_binding=ctrl+i
#select_range_binding=ctrl+r
#download_mpv_playlist=ctrl+p

# Specify audio format: "best", "aac","flac", "mp3", "m4a", "opus", "vorbis", or "wav"
audio_format=aac

# Specify ffmpeg/avconv audio quality
# insert a value between 0 (better) and 9 (worse) for VBR or a specific bitrate like 128K
#audio_quality=0

# Embed the thumbnail on audio files
embed_thumbnail=yes

# Add metadata to audio files
audio_add_metadata=yes

# Add metadata to video files
video_add_metadata=yes

# Same as youtube-dl --format FORMAT
# see https://github.com/ytdl-org/youtube-dl/blob/master/README.md#format-selection
# set to "current" to download the same quality that is currently playing
#video_format=best

# Remux the video into another container if necessary: (currently supported:
# avi, flv, gif, mkv, mov, mp4, webm, aac, aiff, alac, flac, m4a, mka, mp3,
# ogg, opus, vorbis, wav)
#remux_video=mkv

# Encode the video to another format if necessary (currently supported: mp4|flv|ogg|webm|mkv|avi)
#recode_video="mp4"

# Restrict filenames to only ASCII characters, and avoid "&" and spaces in filenames
#restrict_filenames=yes

# Download the whole Youtube playlist (no) or only one video (yes)
# Same as youtube-dl --no-playlist
#no_playlist=no

# Download the whole mpv playlist (yes) or only the current video (no)
# This is the default setting, it can be overwritten with the download_mpv_playlist key binding
#mpv_playlist=no

# Use an archive file, see youtube-dl --download-archive
# You have these options:
#  * Comment out to not use an archive file
#  * Set an absolute path to use one archive for all downloads e.g. download_archive="/home/user/archive.txt"
#  * Set a relative path/only a filename to use one archive per directory e.g. download_archive="archive.txt"
#  * Use $PLAYLIST to create one archive per playlist e.g. download_archive="/home/user/archives/$PLAYLIST.txt"
#download_archive="$PLAYLIST.txt"

# Set '/:dir%mpvconf%' to use mpv config directory to download
# OR change to '/:dir%script%' for placing it in the same directory of script
# OR change to '~~/ytdl/download' for sub-path of mpv portable_config directory
# OR write any variable using '/:var', such as: '/:var%APPDATA%/mpv/ytdl/download' or '/:var%HOME%/mpv/ytdl/download'
# OR specify the absolute path, such as: "C:\\Users\\UserName\\Downloads"
download_path=~~/files/ytdl/download

# Filename format to download file
# see https://github.com/ytdl-org/youtube-dl/blob/master/README.md#output-template
# For example: "%(title)s.%(ext)s"
filename=%(title)s.%(ext)s

# Subtitle language
# Same as youtube-dl --sub-lang en
# Set to "all" to download/embed all languages
#sub_lang=en

# Subtitle format
# Same as youtube-dl --sub-format best
#sub_format=best

# Download auto-generated subtitles
# Same as youtube-dl --write-auto-subs / --no-write-auto-subs
#sub_auto_generated=true

# Use a cookies file for youtube-dl
# Same as youtube-dl --cookies
#cookies=C:\Users\username\cookies.txt

# Write download errors to a log file
#log_file=C:\Users\username\download.log

# Executable of youtube-dl to use, e.g. "youtube-dl", "yt-dlp" or path to the executable file
# Leave commented out to auto-detect an executable in $PATH
youtube_dl_exe=yt-dlp

# Use a config file, see youtube-dl --config-location, instead of
# the usual options for this keyboard shortcut. This way you can
# overwrite the predefined behaviour of the keyboard shortcut and
# all of the above options with a custom download behaviour defined
# in each config file.
#download_video_config_file=C:\Users\username\video_config.txt
#download_audio_config_file=C:\Users\username\audio_config.txt
#download_subtitle_config_file=C:\Users\username\subtitle_config.txt
#download_video_embed_subtitle_config_file=C:\Users\username\embeded_config.txt

# Open a new terminal window/tab for download.
# This allows you to monitor the download progress.
# If mpv_playlist is true and the whole mpv playlist should be
# downloaded, then all the downloads are scheduled immediately.
# Before each download is scheduled, the script waits the given
# timeout in seconds.
# If you roughly know how long a download usually takes, you
# can try to set the timeout to that value to avoid too many
# parallel downloads.
open_new_terminal=no
open_new_terminal_autoclose=no
#open_new_terminal_timeout=3

# Set the command that opens a new terminal (JSON array)
# Use "$cwd" as a placeholder for the working directory
# Use "$cmd" as a placeholder for the download command
# Example for xfce4-terminal that opens a tab `--tab`
# and keeps the tab open `-H` after the download has finished
#open_new_terminal_command=["xfce4-terminal", "--tab", "-H", "-x", "$cmd"]
# Example for Windows Terminal that opens a tab `-new-tab` in a new window
# called `ytdlp` and keeps the tab open `/K` after the download has finished.
# Replace `/K` with `/C` to close the tab when the download has finished.
#open_new_terminal_command=["wt", "-w", "ytdlp", "new-tab", "-d", "$cwd", "cmd", "/K", "$cmd"]


# Used to localize uosc-submenu content
# Must use json format, example for Chinese: [{"Download": "下载","Audio": "音频"}]
#locale_content=
