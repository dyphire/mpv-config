##⇘⇘Basic instructions:
## There is a comment character "#" at the beginning of the line, which means that this item is not enabled (that is, the default setting state of MPV is restored). Delete it to enable it.
## If the partially enabled parameter does not have "=", then this item is actually "yes". For example, deband is turned off by default: --deband is actually equivalent to --deband=yes; by analogy, --deband=no is equivalent to commenting out this parameter.
## Explanation of comment content - # <Optional value> [Conditional requirements] Explanation of parameter meaning (supplementary)

##########
# Basics #
##########

## Decoding
vo=gpu-next                           # <gpu/gpu-next/libmpv> Video output driver. Many subsequent options also only work properly with these three. The current version default value is gpu
                                      ## gpu has the highest universality and completeness; gpu-next See the discussion here https://github.com/hooke007/MPV_lazy/discussions/39; libmpv is a partial front-end design and is generally not used
                                      ## gpu-next has better prospects. It has currently implemented parsing and mapping of Dolby Vision RPU layer metadata, but does not yet support EL layer metadata parsing.
                                      ## The specific differences between gpu-next and gpu can be found in the official wiki: https://github.com/mpv-player/mpv/wiki/GPU-Next-vs-GPU
gpu-api=d3d11                         # <opengl/vulkan/d3d11> [It is recommended to set to d3d11 when SVP frame filling] Select the graphics drawing interface. The native rendering of windows is d3d11 (mpv is the default for windows, please note that the graphics card turns on the adaptive power mode)
                                      ## opengl is the least recommended choice, vulkan’s 10bit has not yet been fully implemented https://github.com/mpv-player/mpv/issues/8554
                                      ## Use d3d11-adapter to set which graphics card mpv uses. See the documentation for details: https://mpv.io/manual/master/#options-d3d11-adapt
                                      ### gpu-api choice?
                                      ## Linux/macOS: vulkan or opengl, vulkan is recommended
                                      ## Windows: vulkan, d3d11 and opengl are all optional. It is recommended to use the native API of d3d11, which has the best performance and achieves 10bit output.
#gpu-context=auto                     # <win/dxinterop/angle/d3d11/winvk/macvk> Select the output backend. This item is usually automatically determined by --gpu-api=<value>; when --gpu-api=opengl, angle is selected by default. In this case, it is best to change it to win/dxinterop
#fbo-format=auto                      # Internal processing precision. This item is usually automatically determined by --gpu-api=<value> to the correct value, with precision of 16 bits and above preferred by default. This parameter cannot be modified under --vo=gpu-next
#d3d11-exclusive-fs=yes               # --gpu-api=Full screen exclusive under d3d11
#d3d11-flip=no                        # [Usually occurs when --d3d11-exclusive-fs=yes and --on-top are used together] Can be used to avoid the freezing screen problem when MPV is in full screen
                                      # Enable this parameter if the above problem exists, otherwise it should not be used, because the flip model under d3d11 has the best performance. After testing, flip mode has performance limitations when driven by N card. It is recommended to disable it when encountering rendering bottlenecks.
                                      # [When --gpu-context=angle also has the problem of full-screen freezing] Use the parameter --angle-flip=no instead of d3d11-flip=no
#d3d11va-zero-copy=yes                # [When gpu-api=d3d11] By default, when using hardware decoding with --gpu-api=d3d11, the video image will be copied (GPU to GPU) from the decoder surface to the shader resource.
                                      # Set this option to avoid copying by sampling directly from the decoder image. This may improve performance and reduce power consumption, but may cause the image to be incorrectly sampled on the bottom and right edges due to padding, and may cause driver errors since Direct3D 11 technically does not allow sampling from the decoder surface (although Supported by most drivers.)               
                                      # When decoding freezes and drops frames, you can enable this to try to improve it.
hwdec=d3d12va-copy,auto-copy          # Specify the hardware video decoding API that should be used. For soft decoding, change it to no. For hard decoding on Windows, it is recommended to use d3d11va or d3d12va-copy. d3d11va has the best hardware decoding support, providing 4k60 frames in av1 format and native hard decoding acceleration at 8k. Although nvdec supports yuv444 hard decoding, this format is relatively rare and there is no pressure in soft decoding.
                                      # --hwdec=auto-safe is equivalent to --hwdec=yes. When --gpu-api=d3d11, the value auto prefers d3d11va; when --gpu-api=vulkan, the value auto prefers nvdec. auto-copy preferred d3d11va-copy
                                      # It is not recommended to use the native hard solution without -copy, which has the highest theoretical decoding efficiency. The purpose is to ensure that all settings/filters/shaders function properly (some are not supported). Note that nvdec hard solution without -copy does not support d3d11, only vulkan and opengl
                                      ## You can also use a priority list composed of multiple values. For example, the values ​​​​vulkan-copy, nvdec-copy, auto mean that these decoding modes are tried in sequence.
                                      ## It is recommended to use the auto-safe parameter when using auto without specifying a specific hard solution API. This will give priority to finding hard solution APIs actively supported by developers (d3d11va or nvdec under Windows)
                                      ## The hard solution mode may encounter some problems. It is recommended to use the soft solution first (the official manual does not recommend the use of hard solution)
                                      ## After testing, it was found that the copy hard decoding mode under --vo=gpu will cause abnormal frame drops when the video frame rate is >=60fps in 4K and above. It is recommended to use the soft decoding mode or the hard decoding mode without copy.
#hwdec-codecs=all                     # Try hard decoding in the selected range of encoding formats. The current version default value is --hwdec-codecs="h264,vc1,hevc,vp8,vp9,av1,prores"
#vd-lavc-dr=no                        # [When gpu-api=d3d11] Enable direct rendering (default: auto). If set to yes, video will be decoded directly to GPU video memory (or scratch buffer)
                                      # If set to no, the video will be decoded into system memory and then copied to GPU memory. This may cause a performance hit, but may resolve the issue on some low-end Intel GPUs
                                      # The default value auto will be automatically selected based on the decoder and GPU capabilities (i.e. automatically disabled for low-end intel GPU devices)
#vd-queue-enable=yes                  # Enable video decoder queue (default: no). If set to yes, the video decoder will run on a separate thread, which may cause performance degradation but may resolve the issue on some low-end Intel GPUs
#vd-lavc-threads=8                    # Number of threads used for decoding. Whether threading is actually supported depends on the codec (default: 0). 0 means automatically detect the number of cores on the machine and use it, up to a maximum of 16. You can manually set more than 16 threads
#vd-lavc-assume-old-x264=yes          # Assume the video is encoded by an old, buggy version of x264 (default: no). Only try to enable this when x264 yuv444p10 format video decoding error solves ffmpeg compatibility issue with old x264 encoding
#opengl-pbo=yes                       # Enable PBO. On some drivers this may be faster, especially if the source video size is large (such as so-called "4K" videos). On other drivers it may be slower or cause latency issues
## ⇘⇘ Handling of dual graphics notebooks
#vd=h264_qsv,hevc_qsv,mpeg2_qsv,vp9_qsv,vp8_qsv,av1_qsv
                                      # Under the configuration combination of Intel core graphics & NVDIA_MX_x50, if independent graphics are used for rendering, because the MX series independent graphics do not have a decoding unit, even if hwdec is used to specify hard decoding, it can still only be soft decoded.
                                      # Use this parameter to use the core graphics hard decoding and auxiliary rendering while letting the independent graphics main rendering (when hwdec=no, fast forwarding may cause MPV to freeze, it is recommended to use the xxxx-copy decoding method)
#d3d11-adapter="NVIDIA GeForce RTX 2070 Super"
                                      # [When gpu-api=d3d11] Specify a certain graphics card as the main rendering output. By default, the system-specified main rendering graphics card is automatically selected.
                                      # You can view the graphics card name in Task Manager and change it accordingly. This parameter is equivalent to setting it in the driver panel to run mpv on a standalone display.
                                      # For example, when using the internal screen of an I+N dual-display notebook, "Intel(R) UHD Graphics" is actually used. Modifying this example to specify independent display can reduce the 3D rendering ratio of the dual-display card in the task manager.
                                      # Most laptops with dual graphics cards behave like "direct display direct connection" when connected to a monitor. At this time, the independent display output is automatically used without this parameter.
                                      # [When gpu-api=vulkan] Use parameter --vulkan-device instead of --d3d11-adapter
#vulkan-device="NVIDIA GeForce RTX 2070 Super"
                                      # [When gpu-api=vulkan] This parameter replaces --d3d11-adapter to perform the functions of the specified graphics card
                                      # The default is empty, the example value is "NVIDIA GeForce RTX 2070 Super" (the complete device name or UUID must be used)

############
# Function #
############

title=${?pause==yes:⏸}${?mute==yes:🔇}${?ontop==yes:📌}${?demuxer-via-network==yes:${media-title}}${?demuxer-via-network==no:${filename}}
                                      # Customizing the title content displayed on the window will also affect the title attribute of some scripts. Default value: ${?media-title:${media-title}}${!media-title:No file}
osc=no                                # [Preconditions for the use of third-party osc scripts] Disable the original OSC (that is, the built-in "osc.lua" script) to be compatible with third-party interface styles
#fs                                   # fs=fullscreen Open to full screen
#no-border                            # The default is the system's native window interface. Enable this option to use a borderless interface (remove Windows window decoration)
no-title-bar                          # Control whether to use the window title bar to play, enabled by default. Unlike --no-border, --no-title-bar can retain Windows native window characteristics
#media-controls=yes                   # <yes|default player|no> Enable integration of the media control interface SMTC (Windows only)
                                      ## If set to player, only the mpv player will use the control; setting it to yes will also enable the libmpv integrated control
#backdrop-type=auto                   # <auto|none|mica|acrylic|mica-alt> Control background/border style (Windows only)
window-corners=roundsmall             # <default|donotround|round|roundsmall> Controls preferences for window rounding. default: let the system decide whether to round corners; donotround: disable rounded corners; round: enable rounded corners; roundsmall: enable rounded corners with a smaller radius
#window-maximized=yes                 # Run MPV to automatically maximize the window (maximization when using a borderless interface is similar to "borderless window mode" rather than "full screen")
#background=none                      # <none|color|default tiles> If the frame has an alpha channel, specifies which background method (if any) to use to blend with it. If there is no alpha channel, do nothing
                                      ## none: do not blend frames and keep alpha as is; color: blend frames with background color (specified by --background-color, default is black); tiles: blend frames with 16x16 gray/white tile background
#background-color="#778899"           # <Format is (AA)RRGGBB> Color used to draw the portion of the mpv window not covered by the video
#hidpi-window-scale=yes               # <yes|default no> Whether to perform HIDPI scaling. This parameter may affect the window size, disabling it will keep the window size unaffected by DPI
                                      # By default, the initialized video window changes size with DPI. For example, after opening an 800p video on a 4k monitor with a zoom of 200%, it automatically performs 2x scaling to 1600p. In addition, it will also affect parts of other scripts
#window-scale=1.0                     # Specify the zoom ratio of the window relative to the original size of the video, the default is 1.0
                                      # Only when hidpi-window-scale=no can the window be scaled to a real 1 (otherwise it will be considered based on the system DPI). Has lower priority than geometry and --autofit parameters
#current-window-scale=1.0             # The function is the same as window-scale, but this item can dynamically adjust the current window size at runtime.
#auto-window-resize=yes               # <default yes|no> Whether to allow mpv to automatically adjust the window size when switching between playing files. This option does not affect the functionality of geometry and autofit
#geometry=75%x70%                     # <[W[xH]][+-x+-y][/WS]>, <x:y> The specific window size at startup (with the function of freezing the window size at this time) and/or position (from the corner Calculated to the nearest screen corner)
                                      # If the ratio is different from the video, automatically fill in the black borders. Even if stretched, try to maintain the set proportions as much as possible. After using this option the --autofit series and --window-scale parameters will have no effect
#autofit=70%                          # <[W[xH]]> Initial window size and target size (percentage or number of pixels) of scaling when playing files under the window, default: 60%
#autofit-larger=90%x90%               # <[W[xH]]> The maximum percentage of the screen in window mode (for example, the initial window of opening a 4k video on an FHD screen is too large)
autofit-smaller=40%x30%               # <[W[xH]]> Minimum screen percentage in window mode (for example, when opening a 480p video on a 4k screen, the initial window is too small)
#keepaspect=no                        # Default is yes, by default MPV only stretches the video according to the source ratio. Enabling this will always warp the image to the window size
#keepaspect-window=no                 # The default is yes. By default, the window ratio of MPV is locked to the video ratio. Enable this to achieve free stretching behavior of the window (full black borders when keepaspect=yes)
#panscan=1.0                          # <0.0-1.0> Crop the screen to fill the window (recommended to be used with keepaspect-window=no)
#pause                                # Start the player in paused state
#loop=inf                             # <N|inf|no> Always loop the current file
#loop-playlist=no                     # <N|inf|force|no> Playlist loop
#keep-open=yes                        # <yes|default no|always> Keep the playlist open after playing, always: automatically pause when the file ends and do not play the next file.
#keep-open-pause=no                   # <default yes|no> Pause after playlist playback is completed
                                      ## --keep-open=yes, --keep-open-pause=yes parameter is [end] precondition for the condition configuration group to take effect.
idle=yes                              # <yes|no|Default once> Idle standby (stop playback or keep mpv running after all files are played)
#untimed                              # Don't fall asleep while outputting video frames. (The frame-filling value cannot be displayed correctly after it is turned on)
log-file="~~/files/mpv.log"           # record log
ontop                                 # Keep window on top
snap-window=yes                       # Capture the window to the edge of the screen when the window is moved (windows systems only)
#window-affinity=default              # <default default|excludefromcmcapture|monitor> Controls the window association behavior of mpv. excludefromcmcapture: MPV's window will be completely excluded from capture by external applications or screen recording software; monitor: goes black outside the MPV window
hr-seek=yes                           # <no|absolute|default|yes|always> Choose when to use precise jumps that are not limited to keyframes. This type of jump requires decoding the video from the previous keyframe to the target location, so it may take some time depending on decoding performance
                                      # no: disable; absolute: only use precise jumps for chapters; default: similar to absolute, but enable precise jumps in the case of pure audio. The behavior may change with version updates; yes: use precise jumps when possible; always: the same as yes (for compatibility)
hr-seek-framedrop=no                  # Frames are lost when jumping, turning it off will help correct the audio delay # It is recommended to set it to no when SVP frame filling
save-position-on-quit=yes             # Remember playback status when exiting. The cache directory defaults to "watch_later" in the settings folder
                                      # You can also press the shortcut key Q when exiting to save the progress
write-filename-in-watch-later-config  # Write the file name to the playback record cache file
#ignore-path-in-watch-later-config    # Ignore the path (i.e. just use the filename) when using the "Watch Later" feature. (Default: no)
resume-playback-check-mtime=yes       # If the file's modification time is the same as when it was saved, restore the playback position from the watch_later configuration subdirectory (usually ~/.config/mpv/watch_later/). This prevents incorrect behavior in files of the same name with different content (default: no)
watch-later-dir="~~/cache/watch_later"
                                      # Store the "watch_later" folder in this directory, with files recording the options specified by --watch-later-options
watch-later-options=start,vid,aid,sid
                                      # [It is recommended to leave it blank when SVP frame filling] Whitelist to watch later
                                      # When --save-position-on-quit=yes or use the shortcut key to save to watch later when exiting, if the whitelist is not used, the filter list, volume, rate and other states will also be saved and displayed next Restore on first boot
                                      # Specific parameter values: start, speed, edition, volume, mute, audio-delay, gamma, brightness, contrast, saturation, hue, deinterlace, vf, af, panscan, aid, vid, sid, sub-delay, sub-speed, sub-pos,sub-visibi lity,secondary-sub-visibility,sub-scale,sub-use-margins,sub-ass-force-margins,sub-ass-vsfilter-aspect-compat,sub-ass-override,ab-loop-a,ab- loop-b,video-aspect-override
#watch-later-options-clr              # When resuming the playback record, it is forbidden to restore all settings changed during the playback process. This can solve some known problems.
#watch-later-options-remove=contrast  # If you want to disable the recovery of some parameters, you can use this item to set it.
                                      # This item must be listed separately when specifying parameters. Currently, it cannot be specified like --watch-later-options=option1,option2,.... It is recommended to use the watch-later-options whitelist to set it.
reset-on-next-file=vid,aid,sid,secondary-sid,vf,af,loop-file,deinterlace,contrast,brightness,gamma,saturation,hue,video-zoom,video-rotate,video-pan-x,video-pan-y,panscan,speed,audio-delay,sub-pos,sub-scale,sub-delay,sub-speed,sub-visibility,secondary-sub-visibility
                                      # Changes that need to be reset when playing the next file (related to color, image, audio track, subtitles and filters)
input-ipc-server=\\.\pipe\mpvsocket   # input-ipc-server=<ipc_path> Enable Ipc function, Linux/MacOS: input-ipc-server=/tmp/mpvsocket
                                      # When using SVP manager, this item needs to be set to the mpvpipe value
#demuxer-max-bytes=500MiB             # Target cache size (KiB or MiB) when playing online videos
#demuxer-readahead-secs=20            # Limit the maximum cache time of online videos (seconds)
#video-exts=3g2,3gp,asf,avi,bdmv,f4v,flv,h264,h265,iso,ifo,m2ts,m4v,mkv,mov,mp4,mp4v,mpeg,mpg,ogm,ogv,rm,rmvb,ts,vob,webm,wmv,y4m
                                      # Specify the list of extensions for video file types to match in options --autocreate-playlist and --directory-filter-types
#audio-exts=aac,ac3,aiff,ape,au,dsf,dts,flac,m4a,mid,midi,mka,mp3,mp4a,oga,ogg,opus,spx,tak,tta,wav,weba,wma,wv
                                      # Specify the list of extensions for audio file types to match in options --audio-file-auto, --autocreate-playlist and --directory-filter-types
#image-exts=apng,avif,bmp,gif,j2k,jp2,jfif,jpeg,jpg,jxl,mj2,png,qoi,svg,tga,tif,tiff,webp
                                      # Specify the list of extensions for image file types to match in options --cover-art-auto, --autocreate-playlist and --directory-filter-types
#directory-mode=ignore                # <default auto|recursive|lazy|ignore> When opening a directory, select recursive, lazy or ignore all subdirectories
#directory-filter-types=video         # <video,audio,image> Specifies the media file types to be filtered when opening the directory. If the list is empty, all files will be added to the playlist (default: video,audio,image)
#autocreate-playlist=same             # <default no|filter|same> Specifies the behavior of automatically creating playlists when opening local files
                                      ## no: Do ​​not create, only load a single file; filter: Create a playlist from the parent directory, which contains files of the type specified in the matching option --directory-filter-types; same: Create a playlist from the parent directory, where Contains files of the same media type as the currently loaded file matching the options --*-exts
                                      # ! Note: This option is also affected by --directory-mode. If --directory-mode is not ignore, a playlist containing subdirectories will be created.
#ordered-chapters=no                  # Ordered chapter list support, enabled by default, if you need to disable it, use no-ordered-chapters
                                      # This item is support for the chapter-links feature of mkv. If disabled, mpv will not load or search video clips from other files, and will also ignore any chapter order specified by the main file.
metadata-codepage=auto                # Specify the encoding of various input metadata (default: auto). This affects how file labels, section titles, etc. are interpreted. For example, it can be set to auto to enable automatic detection of encodings (non-UTF-8 encodings are an obscure edge use case)
msg-level=all=info                    # <module1=level1,module2=level2,...> Controls the verbosity of each module's log output on the console, which will also affect the log file. Available levels: <no|fatal|error|warn|info|status default|verbose|debug|trace>
                                      # The example is to only display information at the info level and above. For more information and use cases, please refer to the official manual: https://mpv.io/manual/master/#options-msg-level

#######
# OSD #
#######

##⇘⇘OSD stands for On-Screen-Display, usually pop-up information displayed on the screen. OSC stands for on-screen-controller, and MPV refers to the simple control interface.
##More custom queries https://mpv.io/manual/master/#osd

no-osd-bar
osd-on-seek=msg-bar                   # <no,bar,msg,msg-bar> The type of information displayed when jumping to the timeline
osd-bar-w=100
osd-bar-h=2
osd-bar-align-y=-1
#osd-fonts-dir=~~/fonts               # Specify the OSD font search directory, the example is the default value
osd-font="Noto Sans Mono CJK SC"      # Specify OSD font
osd-font-size=24                      # Change OSD font size (global, affects text displayed by multiple functions) (default: 38)
osd-color="#FFFFFFFF"                 # OSD text main color
osd-outline-size=1.0                  # OSD text outline size
osd-outline-color="#FF000000"         # OSD text outline color
osd-shadow-offset=0.5                 # OSD text subtitle shadow size
osd-shadow-color="#FF000000"          # OSD text subtitle shadow/background color
osd-border-style=outline-and-shadow   # <Default outline-and-shadow|opaque-box|background-box> Text subtitle border style
                                      # outline-and-shadow: draw outlines and shadows; opaque-box: draw outlines and shadows; draw outlines and shadows as opaque boxes, tightly wrapping each line of text; background-box: draw a background box to frame all text lines stand up
#osd-spacing=1                        # OSD text subtitle kerning
#osd-blur=0.5                         # Edge blur of OSD text subtitles <0..20.0>
#osd-bar-outline-size=1.2             # Outline size of OSD bar
#osd-scale-by-window=no               # <default yes|no> Specifies whether to scale the OSD based on the window size
#osd-playlist-entry=filename          # <default title|filename|both> Specifies that the playlist displays the media title or file name or both
#osd-playing-msg="${?demuxer-via-network==yes:${media-title}}${?demuxer-via-network==no:${filename}} ${!playlist-count==1:list:${playlist-pos-1}/ ${playlist-count}}"
                                      # Information displayed briefly when each file starts playing. Default display file name
osd-status-msg=${playback-time/full} / ${duration/full} (${percent-pos}%)\nframe: ${estimated-frame-number} / ${estimated-frame-count}
                                      # Information displayed by OSD when jumping
osd-fractions=yes                     # Display OSD time in seconds (millisecond precision), useful for viewing the exact timestamp of video frames
osd-duration=2000                     # Set (global) OSD text message duration (milliseconds) (default: 1000)
#osd-playing-msg-duration=2000        # --osd-playing-msg The duration of the text. If this is not set, the global duration will be used.

#########
# Video #
#########

### Video related settings are set using configuration groups. The following are only parameter examples. For specific settings, see the relevant configuration group parameters of [General Parameter Supplementary Area] and [Configuration Group] below.

##⇘⇘The following are ICC color management related parameter settings
#icc-profile="~~/icc/ITU-RBT709ReferenceDisplay.icc" 
                                      # Load the ICC profile and use it to convert video RGB to screen output, and select the icc profile corresponding to the color gamut of the monitor. This option overrides the --target-prim, --target-trc and --icc-profile-auto options
                                      ## Since the mpv color calibration target is bt.1886 (close to gamma=2.4), when the --icc-profile-auto parameter is enabled to use the system-specified (srgb) color calibration file, the gamma curve of the (srgb) color calibration file will be Usually gamma2.2, which will cause the mpv screen to display abnormally
                                      ## In response to the above problems, it is best to manually specify the gamma curve as the corresponding monitor color gamut color calibration file of gamma2.4. Example parameters are available for reference.
#icc-profile-auto                     # If you have done professional color correction, you can enable it (the corresponding icm color correction document exists in the system directory). For wide color gamut screens that have not been calibrated, target-prim=<value> should be specified manually.
                                      # Enabling color management allows videos in the standard color space to display relatively correct colors on wide color gamut displays. Turning it off will restore the oversaturated state.
                                      # Currently, when mpv uses icc color management, since the color calibration curve target is bt.1886, it will cause problems such as color cast and dark screen on most displays https://github.com/mpv-player/mpv/issues/ 8009
                                      ## Enable the parameter --icc-force-contrast=1000, which can solve the problem of dark pictures caused by the extremely high contrast of some color correction files (self-test reasonable values ​​for OLED screens). #! Note that the problem of dark hdr mapping images still cannot be solved
                                      # Or use the --target-prim=<value> parameter to manage the color space
#icc-intent=0                         # ICC color conversion mapping intent, 0: perceptual, 1: relative colorimetric (default), 2: saturated, 3: absolute colorimetric. It is recommended to use perceptual mapping https://github.com/mpv-player/mpv/issues/8009#issuecomment-923607273
#icc-force-contrast=1000              # <no|0-1000000|inf> Color management. Overwrite the static contrast data in the ICC file. The default no is no overwriting. oled can be set to inf, which is infinite (if the data in the ICC is lost, it will automatically fall back to 1000). This item only affects the content display of bt.1886.
                                      ## Ordinary LCD generally uses 1000 (subject to the panel's native data); users using OLED display devices try to use 1000000 or the special value inf. Setting the LCD to 1000 can solve the problem of extremely high contrast in some color calibration files, causing the black part to be too dark.
#icc-3dlut-size=64x64x64              # <default auto|RxGxB> Size of the 3D LUT generated from the ICC profile for each dimension. Range<2--512>
#icc-cache=no                         # Whether to store the 3dlut cache of ICC configuration files locally, enabled by default
#icc-cache-dir="~~/cache/icc_cache"   # Specify the directory to store and load 3D LUTs created from ICC profiles. This can be used to speed up loading. Note that these files contain uncompressed LUTs. Their size depends on --icc-3dlut-size and can be very large. NOTE: This will not clear automatically, so old, unused cache files may linger indefinitely
                                      ## The 3dlut generated by the cache should have an acceleration effect, but insufficient hard disk IO performance may have a counterproductive effect. You can choose whether to disable it according to the actual situation.
#use-embedded-icc-profile=no          # Load embedded ICC profiles contained in media files (such as PNG images). (Default: yes). Note that this option under --vo=gpu only works when also using display ICC profile (--icc-profile or --icc-profile-auto)

##⇘⇘The following are target color management related parameter settings
#target-prim=auto                     # Wide color gamut screens should set this parameter to a specific value to solve the problem of color oversaturation. When ICC color management is not used, the video color will adapt to this color space. There is no need to change this default value (bt.709) for srgb screens. Other examples: 99% of argb screens write adobe, 90%+ of p3 color gamut screens write dci-p3
                                      # Using the --target-prim=<value> parameter to manage the color space will cause a color cast problem under hdr. Enable the --gamut-mapping-mode=clip parameter during hdr mapping to solve this problem https://github.com /mpv-player/mpv/issues/9071
#target-gamut=dci-p3                  # Explicitly limit the display's color gamut. You can use this option to limit the output color gamut, such as DCIP3-in-BT.2020; set `--target-prim` to the color space specification and `--target-gamut` to the output color to limit domain. Depends on `--target-prim`. (only applies to `--vo=gpu-next`)
#target-trc=gamma2.2                  # Specify the transmission characteristics (gamma) of the display, effective when icc color management is not used. Default value auto: use gamma2.2 under hdr under --vo=gpu, no processing under sdr; always use bt.1886 curve under --vo=gpu-next (assuming infinite contrast, that is, oled)
                                      # It is recommended that non-OLED and HDR displays always use the gamma2.2 curve to avoid too dark MPV images. For hdr pass-through, this item needs to use auto or pq value
#target-contrast=auto                 # <auto|10-1000000|inf> Specifies the measured contrast of the output display. This is used in conjunction with --target-peak to calculate the display black point for use in black point compensation during HDR tone mapping
                                      # The default value is auto, which assumes a 1000:1 contrast ratio (considered a typical SDR monitor), which when passed through to HDR, will have infinite contrast. inf contrast specifies the ability of a display to have perfect black levels, i.e. an OLED display
#target-peak=auto                     # <auto|nits> Specifies the measured peak brightness of the output display. Affected by the --target-trc parameter, the default value is auto: use the appropriate value according to the trc parameter. The default value for sdr is 203. Under hdr, it is recommended to specify the specific nits value according to the actual display effect.
                                      # When using icc color management, if nits is set higher than the default value (203), the monitor will be treated as an hdr screen by mpv
                                      # Try not to modify this parameter under --vo=gpu-next to avoid abnormal screen performance.
##⇘⇘The following are 3dlut related parameters
#lut=<file>                           # [Effective when --vo=gpu-next] Specifies a custom LUT (Adobe .cube format) to be applied to the color as part of the color conversion. The exact way depends on --lut-type
#lut-type=conversion                  # [Effective when --lut=<file> is enabled], <default auto|native|normalized|conversion>, controls the way the color values ​​of LUTs specified as --lut are passed in and out
                                      # auto: Automatically select LUTs from tagged metadata, otherwise fall back to system (default); native: Apply to the original image content in its native RGB color space before converting to the output color space (non-linear light)
                                      # normalized: Applied to normalized RGB image content under linear lighting before conversion to output color space
                                      # conversion: Full replacement conversion from image color space to output color space. If such a LUT exists, it has highest priority and overrides any ICC profile and options related to tone mapping and output chroma (--target-prim, --target-trc, etc.)
#target-lut=<file>                    # [Effective when --vo=gpu-next], specify a custom LUT file (Adobe .cube format) to apply to the color before displaying on screen
                                      # After encoding to the target color space, this LUT provides values ​​in normalized RGB form, so will be processed after the parameter --target-trc
#image-lut=<file>                     # [Effective when --vo=gpu-next] Specifies a custom LUT file (Adobe .cube format) to apply to colors during image decoding. The exact way the LUT is used depends on --image-lut-type
#image-lut-type=conversion            # [Effective when --image-lut=<file> is enabled], <default auto|native|normalized|conversion>, controls the way the color values ​​of the LUT specified as --image-lut are passed in and out
                                      # auto: Automatically select LUT from tagged metadata, otherwise fall back to system (default); native: Apply to original image content in original color space before decoding to RGB. For example for an HDR10 image this will input a PQ encoded YCbCr value in the range 0.0-1.0
                                      # normalized: applied to normalized RGB image content, after decoding from its native color encoding, but before linearization
                                      # conversion: Completely replaces color decoding. This type of LUT should ingest the native color space of the image and output a normalized non-linear RGB
##⇘⇘The following are hdr related parameters
#inverse-tone-mapping=yes             # <yes|default no> [effective when --vo=gpu-next], if set, allows reverse tone mapping (extending SDR to HDR), only effective on HDR devices. The use of some tone mapping curves is not supported, please use with caution
#target-colorspace-hint=yes           # <Default auto|yes|no> [Effective when --vo=gpu-next] Automatically configure the display's output color space to pass the media stream's input values ​​if possible (e.g. HDR pass-through). Requires driver support
                                      # Windows needs to manually switch the display HDR mode (Windows limitation)
#tone-mapping=hable                   # Tone mapping algorithm, other recommended ones include clip|mobius|reinhard|hable|bt.2390|gamma|spline|bt.2446a|st2094-10|st2094-40, the default is auto, and the best is selected based on internal heuristics Curve (actually spline under --vo=gpu-next)
                                      # spline, bt.2446a, st2094-10 and st2094-40 algorithms are only available under --vo=gpu-next
                                      ## When vo=gpu, it is recommended to use hable or bt.2390 for testing. hable retains better details, bt.2390 has better contrast
                                      ## When vo=gpu-next is used, it is currently recommended to use spline, hable and bt.2446a for testing. The spline mapping algorithm has the best tone mapping performance inside mpv when used with --hdr-compute-peak.
#tone-mapping-param=0.3               # Minor parameters for the tone mapping algorithm. hable and bt.2446a have no parameters; bt.2390 has no parameters under --vo=gpu, and the default value is 1.0 under -vo=gpu-next; st2094-10 defaults to 0.7/mobius and spline defaults to 0.5/reinhard and defaults to 0.5/gamma. 1.8 (default value under --vo=gpu-next is 0.3)
                                      # Recommended value when using bt.2390 under -vo=gpu-next: 2.0 or the value 0.5 in the ITU-R specification
#tone-mapping-max-boost=1.0           # <1.0-10.0> Maximum exposure multiple of average brightness, default: 1.0. Increasing this value can reveal hidden details in dark areas; too high can make dark areas look unnaturally bright. You can try the performance under 1.0, 1.33, only available under --vo=gpu
#gamut-mapping-mode=clip              # <default auto|clip|perceptual|relative|saturation|absolute|linear|warn|desaturate|darken> Specify the desired processing method of the target display gamut after any tone mapping is completed, default auto: automatically select the best mode ( Practical application perceptual)
                                      # clip: RGB each channel is hard-cut to the target color gamut, it is recommended to use it first; perceptual: Use soft knees to perform perceptually balanced color gamut mapping, with the function of rolling off the clipping area, and the hue conversion function to maintain saturation
                                      # relative: performs relative colorimetric shearing while maintaining the exponential relationship between brightness and chroma; saturation: performs a simple RGB->RGB saturation mapping. Will never cut, but will distort all tones and/or cause a faded look
                                      # absolute: Perform absolute colorimetric shearing. Like 'relative', but does not adapt to the white point; linear: linearly/uniformly desaturates the image to bring the entire image into the target color gamut
                                      # warn: simply highlight out-of-gamut pixels; desaturate: perform constant brightness colorimetric clipping, reducing color saturation towards white until they are within range; darken: uniformly darken the input slightly to prevent blowout clipping and highlighting, then colorimetrically clamped to the input gamut boundary, with a slight bias to preserve the chromaticity of the luminance
#hdr-contrast-recovery=0.30           # <0.0-2.0> Enables the HDR contrast restoration algorithm, which is designed to enhance the contrast of tone-mapped HDR video. Only available with --vo=gpu-next
                                      # Strength (default: 0.0) indicates how much contrast is restored, 0.0 means completely disabled, 1.0 means 100% strength. Values ​​greater than 1.0 are allowed, but may result in oversharpening
                                      ## The default value of this parameter in the mpv built-in configuration group gpu-hq is 0.30
#hdr-contrast-smoothness=3.5          # <1.0-100.0> Enables the HDR contrast smoothing algorithm, which is designed to enhance the smoothness of tone-mapped HDR video. Only available with --vo=gpu-next
                                      # Smoothness (default: 3.5) represents how low-pass the HDR source is to obtain contrast information, a value of 2.0 corresponds to a 2x downscaling. Users with low DPI monitors (<= 100) may wish to lower this value, while users with very high DPI monitors ("Retina") may wish to increase this value
#hdr-compute-peak=yes                 # <default auto|yes|no> This option basically provides dynamic scene-based tone mapping (older graphics cards do not support this parameter, in which case the picture will become pale), which may cause the brightness to change when the scene changes. Change flash
                                      # Currently when --hdr-compute-peak is enabled, highlight details are easily lost or overexposed under some tone mapping curves (bt.2390, reinhard); there are also significant improvements under some tone mapping curves (spline, bt.2446a, hable )
#hdr-peak-decay-rate=20               # [Effective when --hdr-compute-peak=yes], decay rate used for HDR peak detection algorithm (<0.0-1000.0>Default: 20.0)
#hdr-scene-threshold-low=1.0          # [Effective when --hdr-compute-peak=yes], the lower threshold (dB) of brightness difference will be considered a scene change (<0.0-100.0> default: 1.0)
#hdr-scene-threshold-high=3.0         # [Effective when --hdr-compute-peak=yes], the upper threshold (dB) of brightness difference will be considered a scene change (<0.0-100.0> default: 3.0)
#hdr-peak-percentile=100              # Effective when [--hdr-compute-peak=yes] and [-vo=gpu-next]. (<0.0-100.0> Default: 100.0) Specifies which percentile of the input image brightness histogram is considered the true peak
                                      # If set to 100 (default), measure the brightest pixel. Otherwise, the top allocation of frequencies is gradually cut off. Setting it too low will result in clipping of very bright detail, but can increase the dynamic brightness of scenes with very bright isolated highlights. Values ​​other than 100 incur a small performance penalty
                                      ## If you feel that the brightness of the picture is always jumping, you can reduce this parameter to ignore some of the peak values. It is not recommended to go below 99.7.
                                      ## The default value of this parameter in the mpv built-in configuration group gpu-hq is 99.995
#allow-delayed-peak-detect=no         # Effective when [--hdr-compute-peak=yes] and [-vo=gpu-next], default no. When using --hdr-compute-peak, allow the detected peak to be delayed by one frame when it benefits performance
                                      # Especially when advanced rendering is not required, this can avoid unnecessary FBO processing. Note that -vo=gpu defaults to latency peak processing

##⇘⇘The following are related parameter settings for adjusting the screen effect.
#video-sync=display-resample          # "ReClock"-like function, changed to synchronize the video frame with the monitor refresh rate, and automatically adjust the audio speed to compensate for the offset. # It is recommended to turn off SVP when adding frames.
                                      # Default audio (synchronized to audio/system clock) generally has the best compatibility but has occasional frame drops and duplication
#video-sync-max-video-change=5        # [Only takes effect when --video-sync=display-xxxx] Default value: 1
#interpolation                        # [Only effective when --video-sync=display-xxxx] Reduce stuttering (also known as picture jitter) caused by mismatch between video fps and display refresh rate. # It is recommended to turn off SVP when adding frames.
                                      # The algorithm used for interpolation. For details, see https://mpv.io/manual/master/#options-tscale
                                      # For some discussions, see https://github.com/mpv-player/mpv/issues/2685
#interpolation-preserve=no            # [Effective when --vo=gpu-next], default is yes. The interpolation results from the previous frame are retained even if the renderer parameters are changed. Except for options related to cropping and video placement, which always invalidate cache
                                      # Enabling this option will result in smoother dynamic updates of renderer settings, at the cost of slightly higher latency in responding to such changes
#tscale=oversample                    # [Effective only when --interpolation is turned on] Select the time domain interpolation algorithm (non-MEMC motion compensation). # It is recommended to turn off SVP when adding frames.
                                      # The default interpolation algorithm is oversample. Overall mitchell is smoother (certainly not as good as SVP interpolation), but there will be blur. oversample has no blur, but is not smooth (basically restores the appearance of 24 frames, and the effect is similar to MADVR's smoothmotion), triangle is between the two, and catmull_rom is relatively sharp
                                      # Please choose which one according to your own needs.
#tscale-radius=1.0                    # Set the radius of the adjustable filter, which must be a floating point number between 0.5 and 16.0. If not specified, defaults to the filter's preferred radius. Not available for every scaler and VO combination
#tscale-clamp=0.0                     # <0.0-1.0> Specifies the weight deviation to be multiplied by a negative coefficient. Specifying --scale-clamp=1 has the effect of completely removing negative weights, effectively limiting the value range to [0-1]. You can specify a value between 0.0 and 1.0 to apply only moderately reduced negative weights
                                      # The default value of tscale is 1.0, which can effectively reduce the ringing artifacts produced by tscale. The default value for other scale algorithms is 0.0
#tscale-antiring=1.0                  # Set the anti-ringing strength. This attempts to eliminate ringing, but introduces other artifacts in the process. Must be a floating point number between 0.0 and 1.0. Default value 0.0 completely disables anti-ringing
                                      # Note that this does not affect the special filters bilinear and bicubic_fast
#dither-depth=auto                    # <N|no|Default auto> Whether to enable color depth dithering to compensate for color conversion loss. Write 8 for an 8-bit display and 10 for a 10-bit display. The value of auto depends on --gpu-api, which may not be correct. 10bit must be manually specified under vulkan. See issue status: https://github.com/mpv-player/mpv/issues/8554
                                      # If the display with 8 jitter and 10 jitter uses 10 and there is abnormal output, change it back to the value 8
#dither=fruit                         # <default fruit|ordered|error-diffusion|no> [effective when --dither-depth is enabled], select color depth dithering algorithm
                                      # The error-diffusion algorithm has the best effect and consumes the most energy. When the performance is insufficient, it will automatically fall back to the fruit algorithm.
#dither-size-fruit=6                  # [Effective when --dither=fruit], <2-8> Set the size of the color depth dither matrix (default: 6). The actual size of the matrix is ​​(2^N)x(2^N) and the option value is N, so 6 is actually 64x64
#error-diffusion=sierra-lite          # <simple|Default sierra-lite|floyd-steinberg|atkinson> [Effective when --dither=error-diffusion], the algorithm kernel used by error-diffusion
#temporal-dither                      # [Effective when --dither-depth is enabled], enable the temporal color depth dithering algorithm (i.e. inter-frame mixed color depth dithering algorithm)
                                      # This varies between 8 different dither modes on each frame by changing the direction of the tiling dither matrix. This may cause flickering on the LCD display
#temporal-dither-period=1             # <1-128> [Effective when --temporal-dither is enabled], determines how often color depth dither mode is updated when used. 1 (default) will update on every video frame

#scale=ewa_hanning                    # Amplification algorithm, the default algorithm is lanczos, the recommended algorithms are --ewa_lanczos, --ewa_lanczossharp and --ewa_hanning, that is, the jinc algorithm and its variants
                                      # ewa_hanning can reduce ringing compared to other jinc algorithms
                                      # Among the built-in scale algorithms, the spline36 algorithm is more suitable for real-life images, and the ewa algorithm is more suitable for anime images.
#scale-radius=3.2383154841662362      # Set the radius of the adjustable filter, which must be a floating point number between 0.5 and 16.0. If not specified, defaults to the filter's preferred radius. Not available for every scaler and VO combination
#scale-antiring=1.0                   # Set the anti-ringing strength. This attempts to eliminate ringing, but introduces other artifacts in the process. Must be a floating point number between 0.0 and 1.0. Default value 0.0 completely disables anti-ringing
                                      # Note that this does not affect the special filters bilinear and bicubic_fast
                                      ## There is basically no need to enable this when using external upscale class shaders
#cscale=bilinear                      # Chroma reduction algorithm; if not specified, --scale is automatically used (not recommended). It is recommended to use the bilinear algorithm. The differential perception of the chroma upscaling algorithm is not obvious, and generally there is no need to invest too much performance.
                                      # In actual tests, it was found that the bilinear algorithm is more suitable for poorer film sources, while the catmull_rom algorithm is more suitable for better film sources.
                                      # Although "KrigBilateral.glsl" has the best effect, the combination of special video sources (VFR) and special shaders may cause excessive energy consumption.
#cscale-radius=3                      # Set the radius of the adjustable filter, which must be a floating point number between 0.5 and 16.0. If not specified, defaults to the filter's preferred radius. Not available for every scaler and VO combination
#cscale-antiring=1.0                  # Set the anti-ringing strength. This attempts to eliminate ringing, but introduces other artifacts in the process. Must be a floating point number between 0.0 and 1.0. Default value 0.0 completely disables anti-ringing
                                      # Note that this does not affect the special filters bilinear and bicubic_fast
                                      ## There is basically no need to enable this when using external cscale class shaders
#dscale=catmull_rom                   # Reduction algorithm. The default algorithm is hermite
                                      # When only using the built-in dscale algorithm, bicubic (catmull_rom is recommended in the variant) or ewa_hanning is recommended. You can also test the effects of robidouxsharp, ewa_robidouxsharp and other algorithms by yourself.
#dscale-radius=1                      # Set the radius of the adjustable filter, which must be a floating point number between 0.5 and 16.0. If not specified, defaults to the filter's preferred radius. Not available for every scaler and VO combination
#dcale-antiring=1.0                   # Set the anti-ringing strength. This attempts to eliminate ringing, but introduces other artifacts in the process. Must be a floating point number between 0.0 and 1.0. Default value 0.0 completely disables anti-ringing
                                      # Note that this does not affect the special filters bilinear and bicubic_fast
                                      ## There is basically no need to enable this when using external dcale class shaders
#linear-upscaling=no                  # [Requires --fbo-format to specify 16-bit precision and above; incompatible with --sigmoid-upscaling] (no impact on HDR content)
#sigmoid-upscaling=no                 # [Incompatible with --linear-upscaling] Non-linear color conversion when upscaling to avoid strong ringing artifacts. Enabled by default
                                      ## Developers recommend either using --sigmoid-upscaling first, or using neither of the above at all (i.e. scaling under gamma light)
                                      ## There is basically no need to enable this when using external upscale class shaders
#correct-downscaling=yes              # [This is invalid when --dscale=bilinear] Enhance the quality of the reduction algorithm (anti-aliasing), which may produce slight distortion for videos with unusual ratios. Enabled by default
                                      ## Can be replaced by the better "SSimDownscaler.glsl" shader solution
#linear-downscaling=no                # [Must be turned off when using "SSimDownscaler.glsl"; --fbo-format must be specified with a precision of 16 bits and above] (no impact on HDR content). Enabled by default
                                      ## The last two parameters of --linear- correspond to "scale in linear light" in MADVR. When zooming out, linear processing can improve the accuracy of color contrast and suppress ringing artifacts produced by some algorithms.
#scaler-resizes-only=no               # The default is yes. When scaling is not performed, the bilinear algorithm is used for perfect restoration. When disabled, the specified scale value is used for processing even if the size is not changed. The half-pixel offset introduced by nnedi3 and ravu can be corrected (but it is not necessary)
#deband=no                            # Eliminate the color band, no need to stay, you can choose to manually turn on the video source
#deband-iterations=1                  # <0-16> The number of times to perform debanding. The higher the intensity, the more time-consuming and labor-intensive it is. Values ​​>4 are actually invalid (default 1). 3-4 is equivalent to the effect of setting madvr's deband to high.
#deband-threshold=48                  # <0-4096> Cutoff threshold for the filter, higher numbers increase intensity but gradually reduce image detail (default 48)
#deband-range=16                      # <1-64> Initial radius, the larger the value, the stronger the color band and the higher the performance consumption; the smaller the value, the smoother it is (default value 16). If you increase --deband-iterations, decrease this value to compensate
#deband-grain=32                      # <0-4096> Add additional dynamic noise to help mask remaining quantization artifacts (default 32)

#########
# Audio #
#########

audio-device=auto                     # This item is used to specify the audio output device at startup
                                      # Example of changing the specific value --audio-device="wasapi/{xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx}", see the official manual for how to obtain the device name
audio-channels=7.1,5.1,stereo         # <Default value auto-safe|auto|layouts|stereo>, if some channel sounds do not appear when playing multi-channel videos on a two-channel system, try to force it to be two-channel.
                                      # Note: This item must be set to the relevant channel value or priority order of the actual audio output device. Under the default auto-safe and auto of mpv, there will be a problem of missing channels in multi-channel, and it is not recommended to use it.
                                      # The example parameters 7.1,5.1,stereo are the priority order of common audio output devices, and will automatically fall back to select the output value that conforms to the actual audio output device (most use stereo two-channel devices)
                                      # When mixing a multi-channel audio track into two-channel audio, if you feel that the background sound is too loud and the characters’ lines are low, try this: https://github.com/mpv-player/mpv/issues/6563
ao=wasapi                             # --ao=<driver1,driver2,...[,]> Specifies a priority list of audio output drivers to use. If the list has a trailing ',', mpv will fall back to one not included in the list. driver
                                      ## Windows recommends wasapi; Linux recommends alsa, which needs to be matched with the parameter --audio-channels=auto; macos recommends coreaudio or coreaudio_exclusive
                                      ## After testing, if other software monopolizes the audio channel and then opens the MPV screen, the screen will be extremely stuck.
#audio-exclusive=yes                  # Audio channel exclusive. If there is a stuttering problem in the audio, you can turn off this or the above items.
#volume=100                           # Player startup volume. 0 is mute, default 100
#volume-max=130                       # <100.0-1000.0> Maximum volume. Default value 130 (130 is about twice as loud as 100 1.3^3≈2)
#audio-pitch-correction=no            # [--af=Precondition of scaletempo/scaletempo2/rubberband] Pitch correction during variable speed playback, default yes. Automatically inserts one of the first three audio filters (see the Filters section for more information)
#audio-delay=0.04                     # If necessary, set the audio delay
#audio-samplerate=96000               # Force resample to 96kHz, 24bit (requires audio device hardware support). Notice! Not necessary
#audio-format=s32
#audio-normalize-downmix=yes          # Enable/disable normalization if surround audio is downmixed to stereo (default: no). If this feature is disabled, downmixing may cause clipping. If this feature is enabled, the output may be too quiet. It depends on the source audio
#replaygain=track                     # <default no|track|album> Adjust the volume gain based on the replay gain value stored in the file metadata
                                      # no: do not perform any adjustments; track: apply track gain; album: if album gain exists, apply album gain, otherwise fall back to track gain
#ad-lavc-downmix=yes                  # <yes|Default no> Whether to request audio channel downmixing from the decoder. Some codecs (such as AC-3, AAC, and DTS) can remix audio while decoding
gapless-audio=no                      # <no|yes|weak default> Try to play a continuous audio file without silence or interruption when the file changes. Default value weak: Initialize audio output when the audio format changes
                                      # When set to yes, the file will be saved at the same sampling rate, resulting in reduced sound quality.
#audio-file-auto-exts=aac,ac3,dts,eac3,flac,m4a,mka,mp3,ogg,opus,thd,wav,wv
                                      # Specify the extension of the audio file to try to match when using the "audio-file-auto" option. Example is the default value
audio-file-auto=fuzzy                 # <Default no|exact|fuzzy|all> Specifies the way to automatically load external audio tracks
                                      ## no: disable; exact: automatically load external audio tracks with extensions that comply with BCP 47 language tag syntax; fuzzy: automatically load external audio tracks that contain video file names; all: automatically load all detected audio tracks
audio-file-paths=audio;audios;**
                                      # <path1:path2:...> Find matching audio tracks in the specified additional directory, supporting relative and absolute paths
                                      ## ":" on windows use ";" instead
                                      ## You can use fuzzydir.lua to enhance the path configuration. Add "**" to automatically load all matching subdirectory audio tracks in the same directory of the video.
alang=english,eng,en,german,ger,de,deu,japanese,jpn,jap,ja,jp,chs,sc,zh-CN,zh-Hans,cht,tc,zh-Hant,zh-HK,zh-TW,chi,zho,zh
                                      # Set the preferred language for audio tracks, but MPV will load external tracks first
#aid=1                                # It is temporarily impossible to select a track based on other metadata. MPV prefers plug-in tracks by default, and unwanted audio tracks are often selected.
                                      ## It is recommended to use the trackselect.lua script to automatically select the specified audio track based on metadata https://github.com/po5/trackselect

#############
# Subtitles #
#############

#sub-font-provider=fontconfig                 # <Default auto|none|fontconfig> Font rendering api options, win recommends using auto, DirectWrite has the best performance
                                              # auto automatically selects the system font rendering interface: DirectWrite for Windows, fontconfig for Linux, and CoreText for macOS
                                              # none Ignore the specified font for subtitles, use the sub-font parameter, and the subtitle style remains unchanged (invalid for built-in subtitles)
                                              # fontconfig uses the font add-on in fonts.conf in the mpv.conf directory to customize the fonts path <dir>CUSTOMFONTDIR</dir>
                                              # When using fontconfig on Windows, all fonts in the directory will be written to the memory for the first time, and then the on-demand request loading method will be used. Loading and switching are extremely slow, not recommended
#sub-ass-override=no                          # <yes|no|default scale|force|strip> Set the subtitle rendering method and control whether to apply style override
                                              ## no: disable; yes: apply all --sub-ass-* style override options; force: force the application of all --sub-* options; scale: similar to yes, but also applies to --sub-scale; strip: remove All ASS tags and styles, this item will also affect subtitles in formats such as pgs and srt.

#sub-scale-by-window=no                       # Whether to scale subtitles according to window size (default: yes). Affects subtitles in plain text and ASS formats
#sub-scale-with-window=no                     # Make subtitle font size relative to the window, not the video (default: yes). Only affects text-only subtitles
#sub-ass-scale-with-window=yes                # Similar to --sub-scale-with-window, but only affects subtitles in ASS format (default: no). In some cases this may cause ass style misalignment
#embeddedfonts=no                             # Use fonts embedded in Matroska container files and ASS scripts (default: yes)
sub-codepage=gb18030                          # Specify the code page used when decoding text subtitles. The default value is auto: automatically detect subtitle encoding, first try UTF-8 encoding, and after failure, try to run uchardet to guess the subtitle encoding (mpv needs to be built based on uchardet)
                                              ## Example is when the subtitle encoding is detected as non-UTF-8, try GB18030 encoding first (applicable to Chinese subtitle users)
                                              ## NOTE: This only works with text subtitle files. Other types of subtitles (especially those in mkv files) are always assumed to be UTF-8
#sub-auto-exts=ass,idx,lrc,mks,pgs,rt,sbv,scc,smi,srt,ssa,sub,sup,utf,utf-8,utf8,vtt
                                              # Specify the extension of the subtitle file to try to match when using the "sub-auto" option. Example is the default value
sub-auto=fuzzy                                # <no|default exact|fuzzy|all> specifies the way to automatically load external subtitles
                                              ## no: disabled; exact: automatically load external subtitles containing extensions that comply with BCP 47 language tag syntax; fuzzy: automatically load external subtitles containing the video file name; all: automatically load all detected subtitles
sub-file-paths=sub;subs;subtitles;**
                                              # <path1:path2:...> Find matching subtitles in the specified additional directories. Supports relative and absolute paths. An example is to automatically search the folders named "sub", "subtitles", and "subtitles" under the current file path.
                                              ## ":" on windows use ";" instead
                                              ## You can use fuzzydir.lua to enhance the path configuration. Add "**" to automatically load all matching subdirectory subtitles in the same directory of the video.
slang=english,eng,en,german,ger,de,deu,japanese,jpn,jap,ja,jp,chs,sc,zh-CN,zh-Hans,cht,tc,zh-Hant,zh-HK,zh-TW,chi,zho,zh
                                              ## Set the preferred language for subtitles, but MPV will load external tracks first
#sid=1                                        ## It is temporarily impossible to select a track based on other metadata, and mpv prefers external tracks by default, often selecting unwanted subtitles.
                                              ## It is recommended to use the sub-select.lua script to automatically select specified subtitles based on metadata https://github.com/CogentRedTester/mpv-sub-select
#subs-fallback=default                        # <yes|default default|no> Fall back to selecting other subtitles when the existing subtitle track cannot meet the conditions of --slang. The value default means that only the track with the "default" mark will be selected.
#subs-fallback-forced=no                      # <default yes|always|no> When automatically selecting a subtitle track, if there is no track matching your preferred language, select a forced track that matches the language of the selected audio track
#subs-with-matching-audio=yes                 # <default yes|forced|no> When automatically selecting a subtitle track, select a full/non-forced subtitle track even if the selected audio track matches your preferred subtitle language
#subs-match-os-language=yes                   # <default yes|no> When automatically selecting a subtitle track, select the track that matches the operating system language (if the audio stream is in a different language). Note that this will be completely ignored if "--slang" is set

#blend-subtitles=yes                          # <yes|video|default no> Blend subtitles onto video frames before interpolation and color management. The value video is similar to yes, but subtitles are drawn at the video's native resolution, scaled with the video
                                              # The --blend-subtitles=video parameter is deprecated under --vo=gpu-next
                                              # Enabling this feature will limit subtitles to the visible part of the video (cannot appear in the black space below the video)
                                              # Also makes subtitles affected by --icc-profile, --target-prim, --target-trc, --interpolation, --gamma-factor and --glsl-shaders
                                              # When using --interpolation, combined with the appropriate tscale algorithm, subtitle performance can be improved
                                              ## Issue status under hdr https://github.com/mpv-player/mpv/issues/6368 (static mapping is not affected)
#sub-ass-force-margins=yes                    # [Invalid when --blend-subtitles=yes/video] The default value is no. When set to yes, the ass subtitles will be output on the black border as much as possible. It is not recommended to permanently set it to yes, which will destroy the pos annotation effect of some ass. It is recommended to switch it manually through shortcut keys.
#stretch-image-subs-to-screen=yes             # Forcing graphics subtitles to be stretched to the scaled resolution instead of the reference video resolution allows PGS to output the effect of black borders. Note: This may ruin the display
                                              # Note: When the video ratio is inconsistent with the PGS subtitle ratio, only turning this on can obtain the correct subtitle display effect (most of the internal pgs subtitles suppressed by domestic movies have this problem)

##⇘⇘The subtitles are displayed differently from xy-subfilter? Try enabling the settings below
#sub-ass-vsfilter-color-compat=full           # <default basic|full|force-601|no> Mimics (xy-)vsfilter behavior to convert subtitle color space
#sub-ass-use-video-data=none                  # <none|aspect-ratio|default all> Controls what information about the video stream is passed to libass. Any option other than 'all' is incompatible with standard ASS and VSFilter
                                              ## For certain types of damaged ASS files you may need to try setting 'aspect-ratio' to get normal rendering; when a damaged ASS file on anamorphic video renders stretched, try setting 'none' to fix it, this parameter will not correct Non-anamorphic video makes an impact
#sub-ass-video-aspect-override=16:9           # <default no|ratio> Allows arbitrary aspect ratios to be passed to libass instead of the actual aspect ratio of the video. Zero or negative aspect ratio is equivalent to 'no'
                                              ## This has no effect when option 'sub-ass-use-video-data' is set to none
#sub-vsfilter-bidi-compat=yes                 # <yes|default no> When enabled will set implicit bidirectional detection to "ltr" instead of "auto" to match the default behavior of ass. It should only be enabled if subtitle bidirectional detection fails
                                              ## This only affects text-only (non-ASS) subtitles
#sub-ass-style-overrides-append=Encoding=-1   # Force style: enable automatic detection. Can be used to fix recognition errors in character encoding and text direction, and improve the rendering of some ASS tags
#sub-ass-style-overrides-append=ScaledBorderAndShadow=no
                                              # Force style: Do not scale borders and shadows. Can prevent the so-called "heavy ink" style https://github.com/libass/libass/issues/287
                                              # Note: This problem has been fixed in the git version after libass 0.15.2

#sub-gauss=1.5                                # <0.0-3.0> Apply Gaussian blur to image subtitles (default: 0). This helps make pixelated DVD/Vobsub look better
#sub-gray=yes                                 # Convert image subtitles to grayscale. Can help make pornographic DVDs/Vobsubs look better
#sub-fix-timingyes                            # Adjust subtitle timing to remove small gaps or overlaps between subtitles (remove gaps or overlaps if the difference is less than 210 ms). In some cases this may make the situation worse, in which case try disabling this. Disabled by default
#sub-stretch-durations=yes                    # Extend the duration of the subtitle so that it ends when the next subtitle starts. Might help with subtitles that mistakenly have zero duration, but equally likely breaks normal subtitles. Disabled by default
#sub-fps                                      # Specify the frame rate of the subtitle file (default: video fps). Only affects text subtitles
#sub-speed=24/23.976                          # Multiply the subtitle event timestamp with the given value. Can be used to fix the playback speed of frame-based subtitle formats. Only affects text subtitles
                                              # --sub-speed=24/23.976 Play frame-based subtitles, assuming a frame rate of 23.976, 24 frames per second
#stretch-dvd-subs=yes                         # Stretch DVD subtitles when playing anamorphic videos, disabled by default
#sub-filter-regex-plain=yes                   # Whether to first convert ASS "text" fields to plain text (default: no). This strips ASS tags and applies ASS directives (such as \N) to newlines. If the result is multi-line, the regex anchors ^ and $ match each line, but any match will still drop all lines
#sub-filter-regex-warn=yes                    # Log dropped lines with warning log level instead of verbose (default: no). helpful for testing
#sub-filter-regex-enable=no                   # Whether to enable regular expression filtering (default value: yes), the following two parameters will not take effect when they are empty
#sub-filter-regex-append=opensubtitles\.org   # --sub-filter-regex-...=... Set a list of regex to match text subtitles and remove any matching lines (Default: empty) Matching is not case sensitive, but how to do this Depends on libc, and will most likely only work with ASCII. It doesn't work with bitmap/image subtitles
#sub-filter-jsre-append=                      # Same as --sub-filter-regex, but uses JavaScript regular expressions. Shared/affected by all --sub-filter-regex-* control options, only requires JavaScript support

##⇘⇘Subtitle settings, when there is no built-in style
#sub-fonts-dir=~~/fonts                       # Specify the font search directory for text subtitles, the example is the default value
sub-font="Noto Sans CJK SC"                   # Specify the font of plain text subtitles. This parameter is supposed to be invalid for ASS subtitles. It actually affects the default font of ASS https://github.com/mpv-player/mpv/issues/8637
sub-font-size=50                              # Text subtitle font size
sub-bold=yes                                  # Use bold style for text subtitles
#sub-italic=yes                               # Use italic style for text subtitles
sub-color="#FFFFFFFF"                         # Text subtitle font color. <The format is (AA)RRGGBB> AA is the hexadecimal transparency, RRGGBB is the hexadecimal color representation
#sub-back-color="#FF262626"                   # Text subtitle background color
sub-outline-size=0.5                          # Text subtitle outline size
sub-outline-color="#FF000000"                 # Text subtitle outline color
sub-shadow-offset=0.5                         # Text subtitle shadow size
sub-shadow-color="#FF000000"                  # Text subtitle shadow/background color
#sub-border-style=opaque-box                  # <Default outline-and-shadow|opaque-box|background-box> Text subtitle border style
                                              # outline-and-shadow: draw outlines and shadows; opaque-box: draw outlines and shadows; draw outlines and shadows as opaque boxes, tightly wrapping each line of text; background-box: draw a background box to frame all text lines stand up
#sub-spacing=1                                # Text subtitle spacing
#sub-blur=0.5                                 # Edge blur of text subtitles, recommended value is between 0.5-3.0 <0..20.0>
#sub-use-margins=no                           # Whether to output plain text subtitles with black borders, the default is yes
#sub-pos=100                                  # Specify the position of the subtitles on the screen. This value is the vertical position of the subtitle as a percentage of the screen height. Default is 100, values ​​above 100 will be shifted downwards. Affects ASS subtitles and plain text subtitles
#sub-margin-x=25                              # Left and right screen margins of the sub in scaled pixels, this option specifies the distance of the sub to the left, and the distance from the right border
#sub-margin-y=22                              # Top and bottom screen margins for children in scaled pixels, this option specifies vertical margins for text-only subtitles. If you only want to increase the vertical subtitle position, use --sub-pos
#sub-align-x=center                           # <left|default center|right> Controls which corner of the screen the text subtitles should be aligned to. Never applied to ASS subtitles except in --no-sub-ass mode. Again, this does not apply to PGS image subtitles
#sub-align-y=bottom                           # <top|center|Default bottom> Controls the vertical position of text subtitles
#sub-justify=left                             # <Default auto|left|center|right> Controls the alignment of multi-line subtitles (default: auto, aligned according to --sub-align-y definition). It is recommended to align left
#sub-ass-justify=yes                          # If --sub-ass-override is not set to no, apply --sub-justify on ASS subtitles. Default value: no


###############
# Screenshots #
###############

### The following preset parameters are only for capturing the highest quality pictures.
screenshot-format=webp                        # <default jpg|(same as above)jpeg|png|webp|jxl|avif>
#screenshot-png-compression=7                 # <0-9> PNG compression level, too high a level will affect performance, the default is 7
#screenshot-png-filter=5                      # Set the filter to apply before PNG compression. 0 is None, 1 is sub, 2 is up, 3 is average, 4 is Paeth, 5 is mixed, which affects the level of compression that can be achieved. Mixed achieves the best compression for most images, so it is the default setting.
#screenshot-jpeg-quality=100                  # <0-100> Highest quality for JPEG, default is 90
#screenshot-jpeg-source-chroma=no             # Write JPEG with the same chroma half-sampling as the source video, default yes
#screenshot-webp-lossless=yes                 # Lossless WEBP, default no
screenshot-webp-quality=85                    # <0-100> [Effective when --screenshot-webp-lossless=no] Loss the quality of WEBP, default 75
screenshot-webp-compression=6                 # <0-6> WEBP compression level. Too high a level will affect performance. The default is 4. NOTE: This will also affect image quality when using lossy WEBP
#screenshot-jxl-distance=0                    # <0-15> JXL's visual model distance, 0 means quality lossless, 0.1 means visual lossless, the default 1 is equivalent to JPEG's 90 quality
#screenshot-jxl-effort=5                      # <1-9> JXL compression level, too high level affects performance, default 4
screenshot-tag-colorspace=no                  # Label screenshots with appropriate color space (not all formats are supported). Default yes
#screenshot-high-bit-depth=no                 # Mainly affects PNG and JPEG XL, try to use the same bit depth as the video output, the default is yes. NOTE: Using same bit depth will significantly increase the final size of the png/jxl
#screenshot-sw=yes                            # Whether to use software rendering for screenshots, default: no. If set to yes, a software scaler is used to convert the video to RGB (or whatever is required for the target screenshot). Software renderers may lack some features, such as HDR rendering
screenshot-template="~~/files/screen/%{media-title}-%P-%n"
                                              ## [If you set the path directly in the template, no --screenshot-dir is needed at this time] Screenshot naming template: https://mpv.io/manual/master/#options-screenshot-template
#screenshot-dir=~~desktop/                    # [If the path has been set in the screenshot naming template, there is no need to use this parameter at this time] Save the screenshot on the desktop by default

#########################
# Script Filter Shaders #
#########################

gpu-shader-cache-dir="~~/cache/shaders_cache"                                   # Specify a directory to store compiled GPU shaders to speed up startup. Enabled by default
                                                                                ## Notice! If not placed under APPDATA, make sure the folder has user write permissions.
                                                                                ## The shaders generated by the cache should have an acceleration effect, but insufficient hard disk IO performance may have a counterproductive effect. You can choose whether to disable it according to the actual situation.
##⇘⇘Script part
##Built-in script switch (if there is no necessary purpose, then do not block the built-in functions of mpv)
#load-scripts=no                                                                # Automatically load all external scripts in the scripts subdirectory in the same directory as the configuration file. The default is yes. When set to no, the specified external script can be loaded using the command in the next line example, which is not recommended.
#scripts="~~/scripts/autoload.lua;~~/scripts/playlistmanager.lua;~~/scripts/open_dialog.lua"
#load-auto-profiles=no                                                          # <yes|no|Default auto> Enable mpv's built-in conditional configuration script [auto_profiles.lua]
#load-osd-console=no                                                            # Enable mpv's built-in console script [console.lua], default yes
#load-stats-overlay=no                                                          # Enable mpv's built-in statistics script [stats.lua], default is yes
#ytdl=no                                                                        # Enable mpv's built-in URL parsing enhancement script [ytdl-hook.lua], default yes
#ytdl-format=bestvideo+bestaudio/best                                           # <ytdl|best|worst|mp4|webm|...> Video format/quality passed directly to youtube-dl. Default value: bestvideo+bestaudio/best
                                                                                ## ytdl does not pass the --format option to youtube-dl and therefore does not override its default value. Note that sometimes youtube-dl returns a format that mpv cannot use, in these cases the mpv default may be better
#ytdl-raw-options=sub-langs="zh.*",write-subs=,write-auto-subs=
#ytdl-raw-options-append=write-subs=
#ytdl-raw-options-append=yes-playlist=
#ytdl-raw-options-append=cookies-from-browser=Firefox                           # Pass and use browser cookies, supporting Firefox, Chrome, Chromium, Edge, Opera, Vivaldi and other browsers
                                                                                ## Note: The cookies-from-browser option requires that the browser has logged into the target website and the cookies have not expired.
                                                                                ## Chromium browsers (Chrome, Edge, etc.) need to close all processes to read cookies, or use --ytdl-raw-options-append=cookies=cookies.txt
#ytdl-raw-options-append=cookies=[D:/cookies.txt]                               # Pass and use cookies.txt file, only absolute paths are supported
#ytdl-raw-options-append=proxy=http://127.0.0.1:7890
                                                                                # [Effective when using yt-dlp/youtube-dl to parse URLs] --ytdl-raw-options=<key>=<value>[,<key>=<value>[,...]] will be customized The options passed to ytdl https://github.com/yt-dlp/yt-dlp#usage-and-options
                                                                                ## It is best to pass multiple parameters and append them independently, that is, write multiple --ytdl-raw-options-append parameters https://mpv.io/manual/master/#options-ytdl-raw-options
#stream-lavf-o-append=http_proxy=http://127.0.0.1:7890                          # [Effective when using libavformat to parse URLs] --stream-lavf-o-append=<key>=<value>[,<key>=<value>[,...]] Pass customized options to libavformat
                                                                                ## It is best to pass multiple parameters and append them independently, that is, write multiple --stream-lavf-o-append parameters https://mpv.io/manual/master/#options-stream-lavf-o
                                                                                ## Note that in fact the proxy set by this option will also be passed to ytdl and other network requests
#input-builtin-bindings=no                                                      # Disable loading of mpv built-in keybindings during startup. This option does not affect key bindings for externally loaded scripts
input-default-bindings=no                                                       # Disable the --mp.add_key_binding key binding scheme of mpv built-in keys and external loading scripts
                                                                                ## Can effectively resolve script shortcut key conflicts. After enabling, you need to specify the required shortcut keys in input.conf

##⇘⇘Filter section
## Set the writing format of the audio/video filter activated with MPV (supports multiple items) --af/vf=filter①=parameter❶=value:parameter❷=value,filter②...
## Only one --af and --vf can exist each. If you don't want to use only this parameter, you can split it and write it. For example, using --vf-toggle to append more filters multiple times will not overwrite the filter specified by --vf=<value>
## Filter algorithms of the same category are mutually exclusive

## Multi-channel audio track adjusts the sound of each channel to prevent background sound or vocals from being too quiet (dual-channel equipment)
#af-toggle=@dynaudnorm:lavfi=[dynaudnorm=f=500:g=31:p=0.5:m=5:r=0.9]
#af-toggle=@dynaudnorm:!dynaudnorm=p=0.65:r=0.9
## Another set of examples
#af-toggle=@loudnorm:lavfi=[loudnorm=I=-16:TP=-1.5:LRA=11]
#af-toggle=@loudnorm:!loudnorm=I=-25:TP=-1.5:LRA=4:linear=false

## Choose one of three audio speed filters (the current default value is good enough)
#af=scaletempo=scale=1.0:stride=60:overlap=.20:search=14:speed=tempo
                                                                                # Audio speed filter used by older versions of mpv. Example values ​​are default parameters
                                                                                # Among them, scale=<N> controls additional video acceleration; stride=<N> value that is too high will cause sound skipping at high speeds and echoes at low speeds. Values ​​that are too low will change the pitch. Increasing the value will improve performance.
                                                                                # overlap=<N> overlap percentage, reducing the value improves separation and improves performance; search=<N> searches the length of the best overlap position (milliseconds), reducing the value improves performance
                                                                                # speed=<tempo|pitch|both|none> tempo synchronizes rhythm with speed, pitch causes lag and is not used, both takes into account both rhythm and pitch, and none ignores speed changes and is not used
#af=scaletempo2=min-speed=0.25:max-speed=4.0:search-interval=30:window-size=20  
                                                                                # This parameter is the audio filter automatically activated by default during variable speed playback. Directly mute processing outside the speed range of min/max-speed=<N>. scaletempo2 has higher audio quality
#af=rubberband                                                                  # Sound quality is between scaletempo and scaletempo2. There are many adjustable parameters. Please refer to the official documentation for details. The default parameters are used directly here.

#vf-toggle=format:gamma=gamma2.2                                                # MPV color calibration curve target is BT.1886, this video filter is used to return to common display standards https://github.com/mpv-player/mpv/issues/8009
#vf-toggle=fps=fps=60/1.001                                                     # Force the video to be output at a specified frame rate (this conflicts with frame filling). It is usually used to enhance the smoothness of scrolling bullets. It is not recommended to use --sub-fps=<value>. The numerator value (rounded) is your monitor refresh rate.

##⇘⇘Shader section
### Shader related settings are set using configuration groups. The following are only parameter examples. For specific settings, see the relevant configuration group parameters of [General Parameter Supplementary Area] and [Configuration Group] below.
## --glsl-shaders=<value> here is used to specify the shaders that are started together with MPV each time (supports multiple)
## Example of initial loading of multiple shaders
#glsl-shaders="~~/shaders/igv/KrigBilateral.glsl;~~/shaders/igv/FSRCNNX_x2_8-0-4-1.glsl;~~/shaders/igv/FSRCNNX_x2_8-0-4-1.glsl;~~/shaders/igv/SSimSuperRes.glsl;~~/shaders/igv/SSimDownscaler.glsl"
#glsl-shaders="~~/shaders/Anime4K/glsl/Restore/Anime4K_Clamp_Highlights.glsl;~~/shaders/Anime4K/glsl/Restore/Anime4K_Restore_CNN_Soft_M.glsl;~~/shaders/Anime4K/glsl/Upscale/Anime4K_Upscale_CNN_x2_S.glsl"

## --glsl-shaders-append is equivalent to --glsl-shader=<value> (note the difference from the parameters in the above description), which means appending a shader (only one item can be appended at a time) and will not overwrite the A shader specified by --glsl-shaders=<value> can append this command infinitely.
#glsl-shaders-append="~~/shaders/other/PixelClipper.glsl"                       # Anti-ringing shader, mainly used for mpv internal EWA class scaling algorithm. Compared with the AR algorithm inside --vo=gpu-next, the performance is slightly better
#glsl-shaders-append="~~/shaders/other/JointBilateral.glsl"                     # Bilateral Chroma Upscaling Shader - Gaussian version that uses the luma plane as a guide to achieve sharper edges without introducing any ringing. Only available with --vo=gpu-next
#glsl-shaders-append="~~/shaders/other/nlmeans.glsl"                            # Noise reduction shader, the effect is good, but the performance consumption is high, only available under --vo=gpu-next. The placement priority should be kept at the forefront, otherwise the effect of noise reduction after amplification will be significantly reduced.
#glsl-shaders-append="~~/shaders/other/colorlevels.glsl"                        # Shader that adjusts RGB output range. If you need to use it, you need to adjust the REFBLACK and REFWHITE values ​​in the shader according to the actual situation of the device, otherwise the output picture may not meet the expected behavior.
#glsl-shaders-append="~~/shaders/igv/KrigBilateral.glsl"                        # Advanced cscale chroma upscaling algorithm will override the specified --cscale=xxxxx algorithm when it takes effect. The best chroma upscaling shader currently available
#glsl-shaders-append="~~/shaders/igv/FSRCNNX_x2_8-0-4-1.glsl"                   # Fast super-resolution convolutional neural network amplification algorithm. The minimum scaling trigger ratio is 1.2, which will override the specified --scale=xxxxx algorithm when it takes effect.
#glsl-shaders-append="~~/shaders/igv/FSRCNNX_x2_8-0-4-1_LineArt.glsl"           # Fast super-resolution convolutional neural network amplification algorithm (anime). The minimum scaling trigger ratio is 1.2, which will override the specified --scale=xxxxx algorithm when it takes effect.
#glsl-shaders-append="~~/shaders/igv/FSRCNNX_x2_16-0-4-1.glsl"                  # Fast super-resolution convolutional neural network amplification algorithm. 16x is better and consumes more energy. The minimum scaling trigger ratio is 1.2, which will override the specified --scale=xxxxx algorithm when it takes effect.
#glsl-shaders-append="~~/shaders/igv/FSRCNNX_x2_16-0-4-1_enhance.glsl"          # Fast super-resolution convolutional neural network amplification algorithm. Artifact removal variant, the minimum scaling trigger ratio is 1.2, which will override the specified --scale=xxxxx algorithm when it takes effect
#glsl-shaders-append="~~/shaders/igv/FSRCNNX_x2_16-0-4-1_anime_enhance.glsl"    # Fast super-resolution convolutional neural network amplification algorithm. anime de-artifact variant, the minimum zoom trigger ratio is 1.2, and will override the specified --scale=xxxxx algorithm when it takes effect
#glsl-shaders-append="~~/shaders/nnedi3/nnedi3-nns32-win8x4.glsl"               # Ultra-high quality interpolation amplification algorithm. The minimum scaling trigger ratio is 1.2, which consumes extremely high energy. nns16 → nns32 → nns64 → nns128 → nns256; win8x4 → win8x6 has better quality but greatly improved performance.
#glsl-shaders-append="~~/shaders/ravu/ravu-zoom-ar-r3.glsl"                     # ravu zoom algorithm zoom variant, universal type, trigger magnification > 1, zoom to target resolution, will override the specified --scale=xxxxx algorithm when it takes effect
#glsl-shaders-append="~~/shaders/ravu/ravu-lite-ar-r3.glsl"                     # ravu amplification algorithm lite variant, universal type, the minimum zoom trigger ratio is about 1.2, the sharpest variant, when it takes effect, it will override the specified --scale=xxxxx algorithm
#glsl-shaders-append="~~/shaders/Anime4K/glsl/Restore/Anime4K_Restore_CNN_Soft_M.glsl" 
                                                                                # Anime4k enlargement algorithm module (moderate picture restoration + weak perception enhancement + trace artifact introduction), the minimum zoom trigger ratio of the CNN variant is 1.2, the Restore_CNN_Soft anti-aliasing softening variant is recommended, which reduces the occurrence of other artifacts such as ringing
                                                                                # Anime4k shader introduction and usage reference: https://hooke007.github.io/mpv-lazy/[01]_%E7%AC%AC%E4%B8%89%E6%96%B9%E7%9D% 80%E8%89%B2%E5%99%A8%E4%BB%8B%E7%BB%8D.html
#glsl-shaders-append="~~/shaders/igv/SSimSuperRes.glsl"                         # Correct mpv's built-in --scale=xxxxx amplification algorithm (eliminate ringing artifacts, restore original clarity, etc.)
#glsl-shaders-append="~~/shaders/igv/SSimDownscaler.glsl"                       # Downscaling algorithm enhancement, used with --linear-downscaling=no
#glsl-shaders-append="~~/shaders/igv/adaptive-sharpen.glsl"                     # Adaptive sharpening algorithm shader


#########################################
# General parameters supplementary area #
#########################################

#d3d11-output-csp=pq                          # [Required --gpu-api=d3d11] This parameter is used for direct HDR, and not supporting conditional configuration will affect sdr playback.
                                              # The current version requires manually opening win10 OS HDR, then opening MPV and starting playback in full screen.
#use-filedir-conf                             # Load the configuration file in the same directory as the playback file
#include="~~/profiles.conf"                   # Additionally read the specified configuration file
                                              # From now on, all configuration group parameters below can also be placed separately in "~~/profiles.conf". The effect will be the same when this parameter is enabled.
#input-conf="~~/input.conf"                   # Specify the input configuration file, used to specify key bindings
libplacebo-opts=tone_map_metadata=cie_y
                                              # Pass additional primitive options to the libplacebo rendering backend (used by --vo=gpu-next) for debugging purposes
                                              # For detailed parameters, see: http://libplacebo.org/options
                                              # Example parameter function is: force the use of peak detection for hdr tone mapping

##⇘⇘The following are the Profiles enable parameters, which can be used according to your needs.
#profile=ICC                                  # icc color management configuration group, ICC display profile specified by the operating system's display settings
#profile=ICC+                                 # icc color management configuration group, use the pan-icc configuration file or professional color correction file provided by color.org, and select the icc configuration file corresponding to the color gamut of the monitor.
profile=Target                                # target color management configuration group, cannot coexist with icc color management
profile=Dither                                # Dithering algorithm configuration group (fruit), the effect is close to error-diffusion, and the energy consumption is low
#profile=Dither+                              # Dithering algorithm configuration group (error-diffusion), error diffusion color depth dithering algorithm, the best effect and the most energy-consuming
profile=Tscale                                # [Must comment before enabling --tscale=<value>] Time domain interpolation algorithm. For specific parameters, see the configuration of the same name in the configuration area below.
#profile=Tscale+                              # [Must comment before enabling --tscale=<value>] Alternative time domain interpolation algorithm. For specific parameters, see the configuration of the same name in the configuration area below.
profile=HQ                                    # The most commonly used built-in algorithm configuration group
profile=DeBand-low                            # [Need to comment before enabling --deband] Default color banding scheme. For specific parameters, see the configuration with the same name in the configuration area below. The deband close to madvr is set to low. When using low, good results have been achieved.
#profile=DeBand-medium                        # [Need to comment before enabling --deband] Alternative debanding scheme. For specific parameters, see the configuration with the same name in the configuration area below. The deband close to madvr is set to medium.
#profile=DeBand-high                          # [Need to comment before enabling --deband] Alternative debanding scheme. For specific parameters, see the configuration with the same name in the configuration area below. The deband close to madvr is set to high.
#profile=SDR2HDR                              # SDR mapping HDR parameter configuration group, only valid on hdr devices, not recommended to be enabled. Only available with --vo=gpu-next
profile=HDR2SDR                               # HDR mapping parameter configuration group
#profile=HDR-PASS                             # HDR pass-through parameter configuration group. The --icc-profile, icc-profile-auto and --target-trc parameters need to be disabled for HDR passthrough. Windows requires manual switching of monitor HDR mode (Windows limitation)
#profile=SWscaler                             # Alternative software scaling solution

## The following are shader configuration groups. You can enable any of the following required configuration groups as needed (this will override the --glsl-shaders-append parameter above)
profile=NNEDI3                                # Suitable for most scenes (NNEDI3-32) ## Performs well in the vast majority of scenes, and is more adaptable to the scene than other configurations (suppresses aliasing and ringing artifacts). If you like versatility, use this configuration group first.
#profile=NNEDI3+                              # Suitable for most scenarios (NNEDI3-64) ## Theoretically, NNEDI3-64 and above variants have better suppression of ringing artifacts, but the energy consumption level is doubled. You can choose whether to use it depending on the performance of the device.
#profile=AMD-FSR_EASU                         # Suitable for most scenarios (AMD-FSR_EASU) ## The EASU variant of AMD's FSR algorithm performs well, producing fewer ringing artifacts compared to the FSR and RCAS variants, while having good picture effects. Zoom in to target resolution
#profile=ravu-zoom                            # Suitable for most scenes (ravu-zoom) ## Zoom in to target resolution
#profile=FSRCNNX                              # Suitable for HD scenes (FSRCNNX) ## The effect is similar to madvr's NGU Sharp, but it produces more ringing artifacts and performs worse in low-resolution images
#profile=FSRCNNX+                             # Suitable for SD scenes (FSRCNNX_enhance) ## Excellent suppression of ringing artifacts for low-resolution real-shot images
#profile=FSRCNNX-anime                        # Suitable for HD animation (FSRCNNX-anime) ## The effect is similar to madvr's NGU AA, but it produces more ringing artifacts and performs worse in low-resolution images
#profile=FSRCNNX-anime+                       # Suitable for SD animation (FSRCNNX-anime_enhance) ## Excellent suppression of ringing artifacts for low-resolution anime-like images
#profile=Anime4K                              # Suitable for most animations (Anime4k artifact removal and anti-aliasing) ## It can have a better suppression effect on defects such as aliasing and ringing, but there is still obvious perceptual smear degradation.
#profile=Anime4K+                             # Suitable for SD animation (Anime4k high-strength anti-aliasing) ## It has a better effect on suppressing defects such as aliasing ringing artifacts and higher intensity for anime-like images. The UL variant has the best actual effect, but consumes very high energy and is not recommended for the time being.
#profile=SSIM                                 # Suitable for low performance consumption

############
# Profiles #
############

##⇘⇘Profiles have no automatic trigger conditions (the built-in configuration groups are also all regular configurations)
##Need to use --profile=<profile1,profile2,...> or multiple lines of --profile=<xxx> parameters in the main configuration file to activate several configurations

[ICC]
 icc-profile=""
 icc-profile-auto
 icc-intent=0
 icc-force-contrast=1000
 icc-3dlut-size=auto
 icc-cache-dir="~~/cache/icc_cache"

[ICC+]
 icc-profile="~~/icc/ITU-RBT709ReferenceDisplay.icc"
 icc-intent=0
 icc-force-contrast=no
 icc-3dlut-size=auto
 icc-cache-dir="~~/cache/icc_cache"

[Target]
 icc-profile=""
 icc-profile-auto=no
 target-prim=auto
 target-trc=gamma2.2
 target-contrast=auto
 target-peak=auto

[Dither]
 dither-depth=auto
 dither=fruit
 dither-size-fruit=6

[Dither+]
 dither-depth=auto
 dither=error-diffusion
 error-diffusion=floyd-steinberg

[Tscale]
 video-sync=display-resample
 #video-sync-max-video-change=5
 interpolation
 #interpolation-preserve=no
 tscale=oversample

[Tscale+]
 video-sync=display-resample
 #video-sync-max-video-change=5
 interpolation
 #interpolation-preserve=no
 tscale=sphinx
 tscale-blur=0.65

[HQ]
 scale=ewa_hanning
 cscale=bilinear
 dscale=catmull_rom
 scale-antiring=0.5
 dscale-antiring=0.5
 linear-upscaling=no
 sigmoid-upscaling=yes
 correct-downscaling=yes
 linear-downscaling=no
 #scaler-resizes-only=no
 deband=no

[DeBand-low]
 profile-desc=DeBand low
 deband-iterations=1
 deband-threshold=48
 deband-range=16
 deband-grain=16

[DeBand-medium]
 profile-desc=deband medium
 deband-iterations=2
 deband-threshold=64
 deband-range=16
 deband-grain=24

[DeBand-high]
 profile-desc=deband high
 deband-iterations=3
 deband-threshold=64
 deband-range=16
 deband-grain=24

[SDR2HDR]
 profile-desc=SDR reverse mapping HDR parameters
 inverse-tone-mapping=yes

[HDR2SDR]
 profile-desc=HDR-SDR mapping parameters
 #target-colorspace-hint=no
 tone-mapping=auto
 #tone-mapping-param=1.0
 #tone-mapping-max-boost=1.0
 gamut-mapping-mode=auto
 hdr-contrast-recovery=0.30
 #hdr-contrast-smoothness=3.5
 hdr-compute-peak=auto
 hdr-peak-percentile=99.995
 hdr-peak-decay-rate=20
 hdr-scene-threshold-low=1.0
 hdr-scene-threshold-high=3.0
 allow-delayed-peak-detect=no

[HDR-PASS]
 profile-desc=HDR pass-through parameters
 target-colorspace-hint=auto

##⇘⇘Alternative software scaling solutions
##Software scaler is used when format conversion needs to be performed inside mpv
[SWscaler]
 profile-desc=Software scaling configuration
 sws-allow-zimg=no                  # Prefer zimg (usually higher quality) over libswscale, default yes. ffmpeg often has compatibility issues with zimg, it is recommended to disable it
 sws-scaler=bicublin                # [libswscale] <fast-bilinear|bilinear|bicubic default|x|point|area|bicublin|gauss|sinc|lanczos|spline>
                                    # [libswscale] Scaling algorithm (also acts on the chroma plane)
 #sws-fast=yes                      # [libswscale] Optimize performance at the expense of quality, default no
 zimg-scaler-chroma=bicubic         # [zimg] <point|bilinear|bicubic|spline16|spline36|lanczos default>
                                    # [zimg] Chroma reduction algorithm
 #zimg-scaler-chroma-param-a=1/3    # [zimg] Sub-parameters of the chroma reduction algorithm. Algorithms that do not support adjustment will not be affected. Default default
 #zimg-scaler-chroma-param-b=1/3
 zimg-scaler=bicubic                # [zimg] Scaling algorithm, available values ​​refer to --zimg-scaler-chroma
 zimg-scaler-param-a=1/3            # [zimg] Subparameters of the scaling algorithm
 zimg-scaler-param-b=1/3
 #zimg-dither=error-diffusion       # [zimg] <no|ordered|random default|error-diffusion> color depth dithering algorithm
 zimg-fast=no                       # [zimg] Optimize performance at the expense of quality, default yes


[NNEDI3]
 profile-desc=Suitable for most scenarios
 glsl-shaders="~~/shaders/nnedi3/nnedi3-nns32-win8x4.glsl;~~/shaders/igv/KrigBilateral.glsl;~~/shaders/igv/SSimSuperRes.glsl;~~/shaders/igv/SSimDownscaler.glsl"

[NNEDI3+]
 profile-desc=Suitable for most scenarios
 glsl-shaders="~~/shaders/nnedi3/nnedi3-nns64-win8x4.glsl;~~/shaders/igv/KrigBilateral.glsl;~~/shaders/igv/SSimSuperRes.glsl;~~/shaders/igv/SSimDownscaler.glsl"

[AMD-FSR_EASU]
 profile-desc=Suitable for most scenarios
 glsl-shaders="~~/shaders/igv/KrigBilateral.glsl;~~/shaders/AMD-FSR/AMD-FSR-EASU_rgb.glsl;~~/shaders/igv/SSimDownscaler.glsl"

[ravu-zoom]
 profile-desc=Suitable for most scenarios
 glsl-shaders="~~/shaders/ravu/ravu-zoom-ar-r3.glsl;~~/shaders/igv/KrigBilateral.glsl;~~/shaders/igv/SSimDownscaler.glsl"

[FSRCNNX]
 profile-desc=Suitable for HD scenarios
 glsl-shaders="~~/shaders/igv/FSRCNNX_x2_8-0-4-1.glsl;~~/shaders/igv/KrigBilateral.glsl;~~/shaders/igv/SSimSuperRes.glsl;~~/shaders/igv/SSimDownscaler.glsl"

[FSRCNNX+]
 profile-desc=Suitable for SD scenarios
 glsl-shaders="~~/shaders/igv/FSRCNNX_x2_16-0-4-1_enhance.glsl;~~/shaders/igv/KrigBilateral.glsl;~~/shaders/igv/SSimSuperRes.glsl;~~/shaders/igv/SSimDownscaler.glsl"

[FSRCNNX-anime]
 profile-desc=Suitable for HD animations
 glsl-shaders="~~/shaders/igv/FSRCNNX_x2_8-0-4-1_LineArt.glsl;~~/shaders/igv/KrigBilateral.glsl;~~/shaders/igv/SSimSuperRes.glsl;~~/shaders/igv/SSimDownscaler.glsl"

[FSRCNNX-anime+]
 profile-desc=Suitable for SD animations
 glsl-shaders="~~/shaders/igv/FSRCNNX_x2_16-0-4-1_anime_enhance.glsl;~~/shaders/igv/KrigBilateral.glsl;~~/shaders/igv/SSimSuperRes.glsl;~~/shaders/igv/SSimDownscaler.glsl"

[Anime4K]
 profile-desc=Anime4K
 profile-desc=Suitable for most animations
 glsl-shaders="~~/shaders/igv/KrigBilateral.glsl;~~/shaders/Anime4K/glsl/Restore/Anime4K_Restore_CNN_Soft_M.glsl;~~/shaders/Anime4K/glsl/Restore/Anime4K_Clamp_Highlights.glsl"

[Anime4K+]
 profile-desc=Anime4K+
 profile-desc=Suitable for SD animations
 glsl-shaders="~~/shaders/igv/KrigBilateral.glsl;~~/shaders/Anime4K/glsl/Restore/Anime4K_Restore_CNN_Soft_VL.glsl;~~/shaders/Anime4K/glsl/Restore/Anime4K_Clamp_Highlights.glsl"

[SSIM]
 profile-desc=Suitable for 4K low performance
 glsl-shaders="~~/shaders/igv/SSimSuperRes.glsl;~~/shaders/igv/SSimDownscaler.glsl"

########################
# Conditional Profiles #
########################

##⇘⇘Conditional trigger configuration, trigger specific parameters based on given conditions. See example for simple format
##Just comment out --profile-cond and --profile-restore to change the conditional configuration into a regular configuration. The general configuration is used in the general area --profile=<value>

##⇘⇘Format example of conditional configuration
##[FS-loop]                                                  # Configuration name, customized
##profile-desc    = Loop the current file in full screen     # Configuration description, does not belong to parameters, write as you like
##profile-cond    = fullscreen                               # Conditions that trigger this configuration. Available properties list https://mpv.io/manual/master/#property-list
##profile-restore = copy                                     # This parameter is generally used as a common parameter before regression is triggered (it will be retained if this option is turned off)
##...                                                        # Then write the parameters triggered under this condition
##...

##⇘⇘Example writing of file name matching: trigger configuration based on specific characters in the file name
##The character "-" needs to use the LUA escape character "%"
#[VCB-Studio]
#profile-desc=Vacuum circuit breaker
#profile-cond=filename:find("VCB%-Studio")~=nil
#profile-restore=copy
#deband=no

#[DVD-Anime]
#profile-desc=2D low definition source enhancement
#profile-cond=height<=576
#profile-restore=copy
#glsl-shaders="~~/shaders/other/FastBilateral.glsl;~~/shaders/igv/FSRCNNX_x2_8-0-4-1_LineArt.glsl;~~/shaders/igv/FSRCNNX_x2_8-0-4-1_LineArt.glsl;~~/shaders/igv/SSimSuperRes.glsl;~~/shaders/igv/SSimDownscaler.glsl"

[Deband]
 profile-desc=Sources below YUV420P10 turn on debanding
 profile-cond=get("video-params/average-bpp") < 24
 profile-restore=copy
 deband=yes

[hdr-2390]
 profile-cond=p.tone_mapping == "bt.2390" and p.current_vo == "gpu-next"
 profile-restore=copy
 tone-mapping-param=2.0

#[hdr-spline]
#profile-cond=p.tone_mapping == "spline"
#profile-restore=copy
#tone-mapping-param=1.0

#[DoVi-P5]
#profile-desc=DoVi-P5 Conversion HDR Passthrough
#profile-cond=get("video-params/colormatrix") == "dolbyvision" and get("video-params/colorlevels") == "full"
#profile-restore=copy
#target-trc=bt.2020
#target-gamut=dci-p3
#target-trc=pq

[HDR]
 profile-desc=HDR configuration
 profile-cond=get("video-out-params/max-luma") > 203
 profile-restore=copy
 #icc-profile=""
 #icc-profile-auto=no
 #target-trc=auto
 #target-peak=100
 blend-subtitles=no
 deband=no
 vf=""

[SDR-Gamut]
 profile-desc=Gamut mapping for SDR content
 profile-cond=get("video-params/primaries") ~= "bt.709" and get("video-params/gamma") == "bt.1886"
 profile-restore=copy
 gamut-mapping-mode=clip

[video-sync]
 profile-desc=Change the audio and video sync mode when the audio adjustment speed exceeds the threshold to avoid significant pitch changes
 profile-cond=(speed * audio_speed_correction) > 0 and ((speed * audio_speed_correction) < 0.96 or (speed * audio_speed_correction) > 1.04) and not (get("estimated-vf-fps") > 47 or get("display-fps") > 120)
 profile-restore=copy-equal
 video-sync=display-tempo

[fps-fix]
 profile-desc=Fixed abnormal power consumption or frame drops caused by high video frame rate and display refresh rate
 profile-cond=get("estimated-vf-fps") > 47 or get("display-fps") > 120
 profile-restore=copy
 video-sync=audio

[8k-fix]
 profile-desc=Use the d3d11va hard solution under 8k av1 to solve the frame drop problem. This solution is only available under --gpu-api=d3d11
 profile-cond=get("video-params/w") > 7000 or get("video-params/h") > 3000
 profile-restore=copy
 hwdec=auto-safe
 video-sync=audio

[pgs-fix]
 profile-desc=Fix the subtitle misalignment caused by the inconsistency between the frame ratio of the internal PGS subtitles suppressed by domestic movies and the video
 profile-cond=get("video-params/aspect") > 16 / 9
 profile-restore=copy
 stretch-image-subs-to-screen=yes

#[deinterlace]
# profile-desc=Automatic deinterlacing
# profile-cond=get("video-frame-info/interlaced")
# profile-restore=copy
# deinterlace

#[audio-filter]
# Side Effect: When switching Bluetooth headsets, it will cause continuous audio and video desynchronization.
# profile-desc=Turn on the dynamic range adjustment filter when the audio channel is greater than 2, suitable for dual-channel devices
# profile-cond=get("audio-params/channel-count") > 2
# profile-restore=copy-equal
# af-pre=@dynaudnorm:lavfi=[dynaudnorm=f=500:g=31:p=0.5:m=5:r=0.9]

[pause]
 profile-desc=Unpin from top when paused
 profile-cond=pause
 profile-restore=copy
 ontop=no

#[fullscreen]
# profile-desc=Full screen automatically pinned to top
# profile-cond=fullscreen or window_maximized
# profile-restore=copy
# ontop

[maximized]
 profile-desc=Cancel automatic window size adjustment when maximizing
 profile-cond=window_maximized and vid and not get("current-tracks/video/albumart")
 profile-restore=copy-equal
 auto-window-resize=no

[minimized]
 profile-desc=Pause when minimizing
 profile-cond=window_minimized and vid and not get("current-tracks/video/albumart")
 profile-restore=copy-equal
 pause

[end]
 profile-desc=Exit full screen after playlist ends
 profile-cond=idle_active
 no-fullscreen
 no-window-maximized

[media-title]
 profile-desc=Switch window title display content under special protocol
 profile-cond=path:find('://') ~= nil or path:find('^magnet:') ~= nil
 #profile-cond=demuxer_via_network == true
 profile-restore=copy
 title=${?pause==yes:⏸}${?mute==yes:🔇}${?ontop==yes:📌}${media-title}

#[image]
# profile-desc=Image
# profile-cond=vid and not get("current-tracks/video/albumart") and estimated_frame_count <= 1
# profile-restore=copy
# prefetch-playlist
# image-display-duration=inf
# scale=ewa_hanning
# cscale=ewa_hanning
# dscale=mitchell

#[audio]
# profile-desc=Audio
# profile-cond=aid and (not vid or get("current-tracks/video/albumart"))
# profile-restore=copy
# prefetch-playlist
# loop-playlist=inf

########################
# Traditional Profiles #
########################
 
##⇘⇘The pre-owned version is automatically configured, with limited functions and is generally not used. The syntax is shown in the example (can be converted to conditional configuration group writing)

##⇘⇘Detect qualified file extensions to activate corresponding parameters during playback, and automatically revoke those that do not.
##[extension.extension]
##Do not write --profile-cond and --profile-restore
##... # Just write the parameters directly

#[extension.vpy]
#profile-desc=Support preview of "xxxx.vpy" files
#demuxer-lavf-format=vapoursynth

##⇘⇘Detect the corresponding parameters of protocol activation that meet the conditions during playback, and automatically cancel the parameters if they do not meet the requirements.
##[protocol.Protocol name]
##Do not write --profile-cond and --profile-restore
##... # Just write the parameters directly

#[protocol.https]
#profile-desc=https protocol
#osd-playing-msg='${media-title} ${!chapters==0:Chapter:${chapter}/${chapters}} ${!playlist-count==1:List:${playlist-pos-1}/${playlist-count}}'
#script-opts-append=osc_lazy-title=${media-title} ${!chapters==0:Chapter:${chapter}/${chapters}} ${!playlist-count==1:List:${playlist-pos-1}/${playlist-count}}

##⇘⇘ Use the display-name.lua script to automatically switch parameters and configuration files between the mpv window according to the display name (Windows only), relying on MultiMonitorTool.exe
#[TV]
#profile-cond=get("user-data/display_name") == 'VX2771-4K-HD'
#profile-restore=copy-equal
#dither-depth=10
#inverse-tone-mapping=yes
#target-colorspace-hint=yes
#script-opts-append=changerefresh-auto=yes
#script-opts-append=changerefresh-rates=23;24;25-50;29-59;30-60;50;59;60